{"version":3,"sources":["webpack:///static/js/3.2e7c2b6d4f081754f72f.js","webpack:///./src/views/secondPage/secondPage.vue?0c01","webpack:///./~/vuedraggable/dist/vuedraggable.js","webpack:///./src/views/secondPage/secondPage.vue","webpack:///./~/sortablejs/Sortable.js","webpack:///./src/views/secondPage/secondPage.scss?1156","webpack:///./src/views/secondPage/secondPage.scss","webpack:///src/views/secondPage/secondPage.vue"],"names":["webpackJsonp","1sTC","module","__webpack_exports__","__webpack_require__","render","_vm","this","_h","$createElement","_c","_self","staticClass","on","click","$event","handlePage","_v","handleButton","_s","count","numb","attrs","element","options","dragOptions","model","value","callback","$$v","list","expression","type","name","_l","key","order","staticRenderFns","esExports","DAYN","exports","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","buildDraggable","Sortable","removeNode","node","parentElement","removeChild","insertNodeAt","fatherNode","position","refNode","children","nextSibling","insertBefore","computeVmIndex","vnodes","map","elt","elm","indexOf","_computeIndexes","slots","isTransition","elmFromNodes","rawIndexes","concat","filter","ind","emit","evtName","evtData","_this","$nextTick","$emit","toLowerCase","delegateAndEmit","_this2","realList","eventsListened","eventsToEmit","readonlyProperties","evt","draggingElement","props","required","default","noTransitionOnDrag","Boolean","clone","Function","original","String","move","data","transitionMode","componentMode","h","$slots","child","componentOptions","tag","footer","mounted","_this3","$el","nodeName","Error","optionsAdded","forEach","bind","onMove","originalEvent","onDragMove","draggable","_sortable","rootContainer","computeIndexes","beforeDestroy","destroy","computed","isCloning","group","pull","watch","handler","newOptionValue","property","option","deep","methods","getChildrenNodes","$children","rawNodes","_this4","visibleIndexes","getUnderlyingVm","htmlElt","index","getUnderlyingPotencialDraggableComponent","_ref","__vue__","$options","_componentTag","$parent","emitChanges","_this5","alterList","onList","newList","spliceList","_arguments","splice","apply","updatePosition","oldIndex","newIndex","getRelatedContextFromMoveEvent","_ref2","to","related","component","context","destination","getVmIndex","domIndex","indexes","numberIndexes","getComponent","componentInstance","resetTransitionData","transitionContainer","kept","undefined","onDragStart","item","_underlying_vm_","onDragAdd","added","onDragRemove","removed","onDragUpdate","moved","computeFutureIndex","relatedContext","domChildren","el","style","currentDOMIndex","currentIndex","willInsertAfter","draggedContext","futureIndex","onDragEnd","object","slice","DxDx","defineProperty","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_secondPage_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b67bdcb8_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_lib_selector_type_template_index_0_secondPage_vue__","normalizeComponent","Component","Lokx","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","nodeType","toString","_extend","expando","defaults","Math","random","sort","disabled","store","handle","scroll","scrollSensitivity","scrollSpeed","test","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","animation","setData","dataTransfer","dragEl","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","x","y","_prepareGroup","fn","charAt","nativeDraggable","supportDraggable","_on","_onTapStart","touchDragOverListeners","push","_onDragOver","get","_cloneHide","sortable","state","lastPullMode","cloneEl","_css","revertClone","rootEl","nextEl","_animate","_closest","selector","ctx","document","parentNode","_matches","_getParentOrHost","parent","host","_globalDragOver","dropEffect","preventDefault","event","addEventListener","captureMode","_off","removeEventListener","_toggleClass","classList","className","replace","R_SPACE","prop","val","defaultView","getComputedStyle","currentStyle","_find","tagName","iterator","getElementsByTagName","n","_dispatchEvent","targetEl","fromEl","startIndex","createEvent","onName","toUpperCase","substr","initEvent","dispatchEvent","_onMove","toEl","dragRect","targetRect","originalEvt","retVal","onMoveFn","dragged","draggedRect","relatedRect","getBoundingClientRect","_disableDraggable","_unsilent","_silent","_ghostIsLast","lastEl","lastElementChild","rect","clientY","top","height","clientX","left","width","_generateId","str","src","href","sum","charCodeAt","_index","previousElementSibling","split","shift","re","RegExp","join","match","_throttle","ms","args","setTimeout","dst","_clone","$","Polymer","dom","cloneNode","_saveInputCheckedState","root","inputs","idx","checked","savedInputChecked","window","parentEl","ghostEl","lastDownEl","scrollEl","scrollParentEl","scrollCustomFn","lastCSS","lastParentCSS","activeGroup","putSortable","tapEvt","touchEvt","autoScroll","R_FLOAT","Date","getTime","win","parseInt","jQuery","Zepto","createElement","supportCssPointerEvents","navigator","userAgent","cssText","pointerEvents","abs","min","_autoScroll","vx","vy","scrollOffsetX","scrollOffsetY","sens","speed","winWidth","innerWidth","winHeight","innerHeight","scrollFn","offsetWidth","scrollWidth","offsetHeight","scrollHeight","right","bottom","clearInterval","pid","setInterval","scrollTo","pageXOffset","pageYOffset","scrollTop","scrollLeft","toFn","fromGroup","originalGroup","checkPull","checkPut","put","constructor","touch","touches","originalTarget","shadowRoot","path","button","some","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","_lastX","_lastY","_disableDelayedDrag","_triggerDragStart","_onDrop","_dragStartTimer","clearTimeout","pointerType","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","active","_nulling","_emulateDragOver","elementFromPoint","_onTouchMove","dx","dy","translate3d","_appendGhost","ghostRect","css","marginTop","marginLeft","body","appendChild","useFallback","_offUpEvents","_loopId","effectAllowed","revert","activeSortable","isOwner","isMovingBetweenSortable","canSort","stopPropagation","animated","contains","floating","cssFloat","display","isWide","isLong","halfway","nextElementSibling","after","elTop","offsetTop","tgTop","moveVector","prevRect","currentRect","save","handleEvent","toArray","getAttribute","items","id","set","closest","querySelectorAll","removeAttribute","capture","passive","utils","off","find","is","extend","throttle","toggleClass","create","version","RdRw","content","locals","YJ15","sources","names","mappings","file","sourcesContent","sourceRoot","giW7","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default","__WEBPACK_IMPORTED_MODULE_1__secondPage_scss__","__WEBPACK_IMPORTED_MODULE_2_vuex__","__WEBPACK_IMPORTED_MODULE_3_vuedraggable__","__WEBPACK_IMPORTED_MODULE_3_vuedraggable___default","message","created","updated","components","a","secondPage","$router","$store","dispatch","handleNoop"],"mappings":"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","file":"static/js/3.2e7c2b6d4f081754f72f.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ \"1sTC\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"secondPage\"\n  }, [_c('p', {\n    staticClass: \"title\",\n    on: {\n      \"click\": function($event) {\n        _vm.handlePage()\n      }\n    }\n  }, [_vm._v(\"secondPage\")]), _vm._v(\" \"), _c('p', [_vm._v(\"第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"button\",\n    on: {\n      \"click\": function($event) {\n        _vm.handleButton()\n      }\n    }\n  }, [_vm._v(\"dian\")]), _vm._v(\" \"), _c('p', [_vm._v(\"count:\" + _vm._s(_vm.count))]), _vm._v(\" \"), _c('p', [_vm._v(\"numb:\" + _vm._s(_vm.numb))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"move-around\"\n  }, [_c('div', {\n    staticClass: \"title\"\n  }, [_vm._v(\"请选择\")]), _vm._v(\" \"), _c('draggable', {\n    staticClass: \"list-group\",\n    attrs: {\n      \"element\": \"ul\",\n      \"options\": _vm.dragOptions\n    },\n    model: {\n      value: (_vm.list),\n      callback: function($$v) {\n        _vm.list = $$v\n      },\n      expression: \"list\"\n    }\n  }, [_c('transition-group', {\n    attrs: {\n      \"type\": \"transition\",\n      \"name\": 'flip-list'\n    }\n  }, _vm._l((_vm.list), function(element) {\n    return _c('li', {\n      key: element.order,\n      staticClass: \"list-group-item\"\n    }, [_vm._v(\" \\n                \" + _vm._s(element.name) + \"\\n                \"), _c('span', {\n      staticClass: \"badge\"\n    }, [_vm._v(_vm._s(element.order))])])\n  }))], 1)], 1)])\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"DAYN\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n(function () {\n  \"use strict\";\n\n  if (!Array.from) {\n    Array.from = function (object) {\n      return [].slice.call(object);\n    };\n  }\n\n  function buildDraggable(Sortable) {\n    function removeNode(node) {\n      node.parentElement.removeChild(node);\n    }\n\n    function insertNodeAt(fatherNode, node, position) {\n      var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;\n      fatherNode.insertBefore(node, refNode);\n    }\n\n    function computeVmIndex(vnodes, element) {\n      return vnodes.map(function (elt) {\n        return elt.elm;\n      }).indexOf(element);\n    }\n\n    function _computeIndexes(slots, children, isTransition) {\n      if (!slots) {\n        return [];\n      }\n\n      var elmFromNodes = slots.map(function (elt) {\n        return elt.elm;\n      });\n      var rawIndexes = [].concat(_toConsumableArray(children)).map(function (elt) {\n        return elmFromNodes.indexOf(elt);\n      });\n      return isTransition ? rawIndexes.filter(function (ind) {\n        return ind !== -1;\n      }) : rawIndexes;\n    }\n\n    function emit(evtName, evtData) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        return _this.$emit(evtName.toLowerCase(), evtData);\n      });\n    }\n\n    function delegateAndEmit(evtName) {\n      var _this2 = this;\n\n      return function (evtData) {\n        if (_this2.realList !== null) {\n          _this2['onDrag' + evtName](evtData);\n        }\n        emit.call(_this2, evtName, evtData);\n      };\n    }\n\n    var eventsListened = ['Start', 'Add', 'Remove', 'Update', 'End'];\n    var eventsToEmit = ['Choose', 'Sort', 'Filter', 'Clone'];\n    var readonlyProperties = ['Move'].concat(eventsListened, eventsToEmit).map(function (evt) {\n      return 'on' + evt;\n    });\n    var draggingElement = null;\n\n    var props = {\n      options: Object,\n      list: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      value: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      noTransitionOnDrag: {\n        type: Boolean,\n        default: false\n      },\n      clone: {\n        type: Function,\n        default: function _default(original) {\n          return original;\n        }\n      },\n      element: {\n        type: String,\n        default: 'div'\n      },\n      move: {\n        type: Function,\n        default: null\n      }\n    };\n\n    var draggableComponent = {\n      name: 'draggable',\n\n      props: props,\n\n      data: function data() {\n        return {\n          transitionMode: false,\n          componentMode: false\n        };\n      },\n      render: function render(h) {\n        var slots = this.$slots.default;\n        if (slots && slots.length === 1) {\n          var child = slots[0];\n          if (child.componentOptions && child.componentOptions.tag === \"transition-group\") {\n            this.transitionMode = true;\n          }\n        }\n        var children = slots;\n        var footer = this.$slots.footer;\n\n        if (footer) {\n          children = slots ? [].concat(_toConsumableArray(slots), _toConsumableArray(footer)) : [].concat(_toConsumableArray(footer));\n        }\n        return h(this.element, null, children);\n      },\n      mounted: function mounted() {\n        var _this3 = this;\n\n        this.componentMode = this.element.toLowerCase() !== this.$el.nodeName.toLowerCase();\n        if (this.componentMode && this.transitionMode) {\n          throw new Error('Transition-group inside component is not supported. Please alter element value or remove transition-group. Current element value: ' + this.element);\n        }\n        var optionsAdded = {};\n        eventsListened.forEach(function (elt) {\n          optionsAdded['on' + elt] = delegateAndEmit.call(_this3, elt);\n        });\n\n        eventsToEmit.forEach(function (elt) {\n          optionsAdded['on' + elt] = emit.bind(_this3, elt);\n        });\n\n        var options = _extends({}, this.options, optionsAdded, { onMove: function onMove(evt, originalEvent) {\n            return _this3.onDragMove(evt, originalEvent);\n          } });\n        !('draggable' in options) && (options.draggable = '>*');\n        this._sortable = new Sortable(this.rootContainer, options);\n        this.computeIndexes();\n      },\n      beforeDestroy: function beforeDestroy() {\n        this._sortable.destroy();\n      },\n\n\n      computed: {\n        rootContainer: function rootContainer() {\n          return this.transitionMode ? this.$el.children[0] : this.$el;\n        },\n        isCloning: function isCloning() {\n          return !!this.options && !!this.options.group && this.options.group.pull === 'clone';\n        },\n        realList: function realList() {\n          return !!this.list ? this.list : this.value;\n        }\n      },\n\n      watch: {\n        options: {\n          handler: function handler(newOptionValue) {\n            for (var property in newOptionValue) {\n              if (readonlyProperties.indexOf(property) == -1) {\n                this._sortable.option(property, newOptionValue[property]);\n              }\n            }\n          },\n\n          deep: true\n        },\n\n        realList: function realList() {\n          this.computeIndexes();\n        }\n      },\n\n      methods: {\n        getChildrenNodes: function getChildrenNodes() {\n          if (this.componentMode) {\n            return this.$children[0].$slots.default;\n          }\n          var rawNodes = this.$slots.default;\n          return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;\n        },\n        computeIndexes: function computeIndexes() {\n          var _this4 = this;\n\n          this.$nextTick(function () {\n            _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children, _this4.transitionMode);\n          });\n        },\n        getUnderlyingVm: function getUnderlyingVm(htmlElt) {\n          var index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);\n          if (index === -1) {\n            //Edge case during move callback: related element might be\n            //an element different from collection\n            return null;\n          }\n          var element = this.realList[index];\n          return { index: index, element: element };\n        },\n        getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref) {\n          var __vue__ = _ref.__vue__;\n\n          if (!__vue__ || !__vue__.$options || __vue__.$options._componentTag !== \"transition-group\") {\n            return __vue__;\n          }\n          return __vue__.$parent;\n        },\n        emitChanges: function emitChanges(evt) {\n          var _this5 = this;\n\n          this.$nextTick(function () {\n            _this5.$emit('change', evt);\n          });\n        },\n        alterList: function alterList(onList) {\n          if (!!this.list) {\n            onList(this.list);\n          } else {\n            var newList = [].concat(_toConsumableArray(this.value));\n            onList(newList);\n            this.$emit('input', newList);\n          }\n        },\n        spliceList: function spliceList() {\n          var _arguments = arguments;\n\n          var spliceList = function spliceList(list) {\n            return list.splice.apply(list, _arguments);\n          };\n          this.alterList(spliceList);\n        },\n        updatePosition: function updatePosition(oldIndex, newIndex) {\n          var updatePosition = function updatePosition(list) {\n            return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\n          };\n          this.alterList(updatePosition);\n        },\n        getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref2) {\n          var to = _ref2.to,\n              related = _ref2.related;\n\n          var component = this.getUnderlyingPotencialDraggableComponent(to);\n          if (!component) {\n            return { component: component };\n          }\n          var list = component.realList;\n          var context = { list: list, component: component };\n          if (to !== related && list && component.getUnderlyingVm) {\n            var destination = component.getUnderlyingVm(related);\n            if (destination) {\n              return _extends(destination, context);\n            }\n          }\n\n          return context;\n        },\n        getVmIndex: function getVmIndex(domIndex) {\n          var indexes = this.visibleIndexes;\n          var numberIndexes = indexes.length;\n          return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];\n        },\n        getComponent: function getComponent() {\n          return this.$slots.default[0].componentInstance;\n        },\n        resetTransitionData: function resetTransitionData(index) {\n          if (!this.noTransitionOnDrag || !this.transitionMode) {\n            return;\n          }\n          var nodes = this.getChildrenNodes();\n          nodes[index].data = null;\n          var transitionContainer = this.getComponent();\n          transitionContainer.children = [];\n          transitionContainer.kept = undefined;\n        },\n        onDragStart: function onDragStart(evt) {\n          this.context = this.getUnderlyingVm(evt.item);\n          evt.item._underlying_vm_ = this.clone(this.context.element);\n          draggingElement = evt.item;\n        },\n        onDragAdd: function onDragAdd(evt) {\n          var element = evt.item._underlying_vm_;\n          if (element === undefined) {\n            return;\n          }\n          removeNode(evt.item);\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.spliceList(newIndex, 0, element);\n          this.computeIndexes();\n          var added = { element: element, newIndex: newIndex };\n          this.emitChanges({ added: added });\n        },\n        onDragRemove: function onDragRemove(evt) {\n          insertNodeAt(this.rootContainer, evt.item, evt.oldIndex);\n          if (this.isCloning) {\n            removeNode(evt.clone);\n            return;\n          }\n          var oldIndex = this.context.index;\n          this.spliceList(oldIndex, 1);\n          var removed = { element: this.context.element, oldIndex: oldIndex };\n          this.resetTransitionData(oldIndex);\n          this.emitChanges({ removed: removed });\n        },\n        onDragUpdate: function onDragUpdate(evt) {\n          removeNode(evt.item);\n          insertNodeAt(evt.from, evt.item, evt.oldIndex);\n          var oldIndex = this.context.index;\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.updatePosition(oldIndex, newIndex);\n          var moved = { element: this.context.element, oldIndex: oldIndex, newIndex: newIndex };\n          this.emitChanges({ moved: moved });\n        },\n        computeFutureIndex: function computeFutureIndex(relatedContext, evt) {\n          if (!relatedContext.element) {\n            return 0;\n          }\n          var domChildren = [].concat(_toConsumableArray(evt.to.children)).filter(function (el) {\n            return el.style['display'] !== 'none';\n          });\n          var currentDOMIndex = domChildren.indexOf(evt.related);\n          var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);\n          var draggedInList = domChildren.indexOf(draggingElement) != -1;\n          return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;\n        },\n        onDragMove: function onDragMove(evt, originalEvent) {\n          var onMove = this.move;\n          if (!onMove || !this.realList) {\n            return true;\n          }\n\n          var relatedContext = this.getRelatedContextFromMoveEvent(evt);\n          var draggedContext = this.context;\n          var futureIndex = this.computeFutureIndex(relatedContext, evt);\n          _extends(draggedContext, { futureIndex: futureIndex });\n          _extends(evt, { relatedContext: relatedContext, draggedContext: draggedContext });\n          return onMove(evt, originalEvent);\n        },\n        onDragEnd: function onDragEnd(evt) {\n          this.computeIndexes();\n          draggingElement = null;\n        }\n      }\n    };\n    return draggableComponent;\n  }\n\n  if (true) {\n    var Sortable = __webpack_require__(\"Lokx\");\n    module.exports = buildDraggable(Sortable);\n  } else if (typeof define == \"function\" && define.amd) {\n    define(['sortablejs'], function (Sortable) {\n      return buildDraggable(Sortable);\n    });\n  } else if (window && window.Vue && window.Sortable) {\n    var draggable = buildDraggable(window.Sortable);\n    Vue.component('draggable', draggable);\n  }\n})();\n\n/***/ }),\n\n/***/ \"DxDx\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_secondPage_vue__ = __webpack_require__(\"giW7\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b67bdcb8_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_lib_selector_type_template_index_0_secondPage_vue__ = __webpack_require__(\"1sTC\");\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_secondPage_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_b67bdcb8_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_lib_selector_type_template_index_0_secondPage_vue__[\"a\" /* default */],\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"Lokx\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @license MIT\n */\n\n(function sortableModule(factory) {\n\t\"use strict\";\n\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n\t\tmodule.exports = factory();\n\t}\n\telse {\n\t\t/* jshint sub:true */\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function sortableFactory() {\n\t\"use strict\";\n\n\tif (typeof window == \"undefined\" || !window.document) {\n\t\treturn function sortableError() {\n\t\t\tthrow new Error(\"Sortable.js requires a window with a document\");\n\t\t};\n\t}\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\tlastEl,\n\t\tlastCSS,\n\t\tlastParentCSS,\n\n\t\toldIndex,\n\t\tnewIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScroll = {},\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\t\tR_FLOAT = /left|right|inline/,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\n\t\t$ = win.jQuery || win.Zepto,\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = false,\n\n\t\tsupportDraggable = !!('draggable' in document.createElement('div')),\n\t\tsupportCssPointerEvents = (function (el) {\n\t\t\t// false when IE11\n\t\t\tif (!!navigator.userAgent.match(/Trident.*rv[ :]?11\\./)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tel = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\n\t\tsavedInputChecked = [],\n\t\ttouchDragOverListeners = [],\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (rootEl && options.scroll) {\n\t\t\t\tvar _this = rootEl[expando],\n\t\t\t\t\tel,\n\t\t\t\t\trect,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinWidth = window.innerWidth,\n\t\t\t\t\twinHeight = window.innerHeight,\n\n\t\t\t\t\tvx,\n\t\t\t\t\tvy,\n\n\t\t\t\t\tscrollOffsetX,\n\t\t\t\t\tscrollOffsetY\n\t\t\t\t;\n\n\t\t\t\t// Delect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollParentEl = rootEl;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = rootEl;\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif ((scrollEl.offsetWidth < scrollEl.scrollWidth) ||\n\t\t\t\t\t\t\t\t(scrollEl.offsetHeight < scrollEl.scrollHeight)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\t\t} while (scrollEl = scrollEl.parentNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (scrollEl) {\n\t\t\t\t\tel = scrollEl;\n\t\t\t\t\trect = scrollEl.getBoundingClientRect();\n\t\t\t\t\tvx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);\n\t\t\t\t\tvy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);\n\t\t\t\t}\n\n\n\t\t\t\tif (!(vx || vy)) {\n\t\t\t\t\tvx = (winWidth - x <= sens) - (x <= sens);\n\t\t\t\t\tvy = (winHeight - y <= sens) - (y <= sens);\n\n\t\t\t\t\t/* jshint expr:true */\n\t\t\t\t\t(vx || vy) && (el = win);\n\t\t\t\t}\n\n\n\t\t\t\tif (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {\n\t\t\t\t\tautoScroll.el = el;\n\t\t\t\t\tautoScroll.vx = vx;\n\t\t\t\t\tautoScroll.vy = vy;\n\n\t\t\t\t\tclearInterval(autoScroll.pid);\n\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tautoScroll.pid = setInterval(function () {\n\t\t\t\t\t\t\tscrollOffsetY = vy ? vy * speed : 0;\n\t\t\t\t\t\t\tscrollOffsetX = vx ? vx * speed : 0;\n\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\treturn scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (el === win) {\n\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tel.scrollTop += scrollOffsetY;\n\t\t\t\t\t\t\t\tel.scrollLeft += scrollOffsetX;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 24);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 30),\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\tif (value === void 0 || value === true) {\n\t\t\t\t\tvalue = group.name;\n\t\t\t\t}\n\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn function (to, from) {\n\t\t\t\t\t\tvar fromGroup = from.options.group.name;\n\n\t\t\t\t\t\treturn pull\n\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t: value && (value.join\n\t\t\t\t\t\t\t\t? value.indexOf(fromGroup) > -1\n\t\t\t\t\t\t\t\t: (fromGroup == value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t}\n\t;\n\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: Math.random(),\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0}\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t// Bind events\n\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t_on(el, 'touchstart', this._onTapStart);\n\t\t_on(el, 'pointerdown', this._onTapStart);\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\ttouchDragOverListeners.push(this._onDragOver);\n\n\t\t// Restore sorting\n\t\toptions.store && this.sort(options.store.get(this));\n\t}\n\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && (evt.path && evt.path[0]) || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button or enabled\n\t\t\t}\n\n\n\t\t\ttarget = _closest(target, options.draggable, el);\n\n\t\t\tif (!target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, startIndex);\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, startIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\ttapEvt = evt;\n\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'transform';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDrag();\n\n\t\t\t\t\t// Make the element draggable\n\t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, oldIndex);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'pointercancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'selectstart', _this);\n\n\t\t\t\tif (options.delay) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'pointermove', _this._disableDelayedDrag);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchmove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'pointermove', this._disableDelayedDrag);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n\t\t\tif (touch) {\n\t\t\t\t// Touch device support\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\tclientY: touch.clientY\n\t\t\t\t};\n\n\t\t\t\tthis._onDragStart(tapEvt, 'touch');\n\t\t\t}\n\t\t\telse if (!this.nativeDraggable) {\n\t\t\t\tthis._onDragStart(tapEvt, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function () {\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t_toggleClass(dragEl, options.dragClass, false);\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, oldIndex);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function () {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t\t}\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),\n\t\t\t\t\tparent = target,\n\t\t\t\t\ti = touchDragOverListeners.length;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\ttouchDragOverListeners[i]({\n\t\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tdx = (touch.clientX - tapEvt.clientX) + fallbackOffset.x,\n\t\t\t\t\tdy = (touch.clientY - tapEvt.clientY) + fallbackOffset.y,\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._dragStarted();\n\t\t\t\t}\n\n\t\t\t\t// as well as creating the ghost element on the document body\n\t\t\t\tthis._appendGhost();\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar rect = dragEl.getBoundingClientRect(),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options,\n\t\t\t\t\tghostRect;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\n\t\t\t\t_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\n\n\t\t\t\t// Fixing dimensions.\n\t\t\t\tghostRect = ghostEl.getBoundingClientRect();\n\t\t\t\t_css(ghostEl, 'width', rect.width * 2 - ghostRect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height * 2 - ghostRect.height);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/useFallback) {\n\t\t\tvar dataTransfer = evt.dataTransfer,\n\t\t\t\toptions = this.options;\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (activeGroup.checkPull(this, this, dragEl, evt)) {\n\t\t\t\tcloneEl = _clone(dragEl);\n\n\t\t\t\tcloneEl.draggable = false;\n\t\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\t_toggleClass(cloneEl, this.options.chosenClass, false);\n\n\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t_dispatchEvent(this, rootEl, 'clone', dragEl);\n\t\t\t}\n\n\t\t\t_toggleClass(dragEl, options.dragClass, true);\n\n\t\t\tif (useFallback) {\n\t\t\t\tif (useFallback === 'touch') {\n\t\t\t\t\t// Bind touch events\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'touchend', this._onDrop);\n\t\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'pointerup', this._onDrop);\n\t\t\t\t} else {\n\t\t\t\t\t// Old brwoser\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'mouseup', this._onDrop);\n\t\t\t\t}\n\n\t\t\t\tthis._loopId = setInterval(this._emulateDragOver, 50);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', this);\n\t\t\t\tsetTimeout(this._dragStarted, 0);\n\t\t\t}\n\t\t},\n\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tisMovingBetweenSortable = false,\n\t\t\t\tcanSort = options.sort;\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.preventDefault();\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation();\n\t\t\t}\n\n\t\t\tif (dragEl.animated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmoved = true;\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(activeSortable.lastPullMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) &&\n\t\t\t\t(evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback\n\t\t\t) {\n\t\t\t\t// Smart auto-scrolling\n\t\t\t\t_autoScroll(evt, options, this.el);\n\n\t\t\t\tif (_silent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttarget = _closest(evt.target, options.draggable, el);\n\t\t\t\tdragRect = dragEl.getBoundingClientRect();\n\n\t\t\t\tif (putSortable !== this) {\n\t\t\t\t\tputSortable = this;\n\t\t\t\t\tisMovingBetweenSortable = true;\n\t\t\t\t}\n\n\t\t\t\tif (revert) {\n\t\t\t\t\t_cloneHide(activeSortable, true);\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (cloneEl || nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, cloneEl || nextEl);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!canSort) {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n\t\t\t\t\t(el === evt.target) && (_ghostIsLast(el, evt))\n\t\t\t\t) {\n\t\t\t\t\t//assign target only if condition is true\n\t\t\t\t\tif (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {\n\t\t\t\t\t\ttarget = el.lastElementChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tif (target.animated) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\t\t\t\t\t}\n\n\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt) !== false) {\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && !target.animated && target !== dragEl && (target.parentNode[expando] !== void 0)) {\n\t\t\t\t\tif (lastEl !== target) {\n\t\t\t\t\t\tlastEl = target;\n\t\t\t\t\t\tlastCSS = _css(target);\n\t\t\t\t\t\tlastParentCSS = _css(target.parentNode);\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\n\t\t\t\t\tvar width = targetRect.right - targetRect.left,\n\t\t\t\t\t\theight = targetRect.bottom - targetRect.top,\n\t\t\t\t\t\tfloating = R_FLOAT.test(lastCSS.cssFloat + lastCSS.display)\n\t\t\t\t\t\t\t|| (lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].indexOf('row') === 0),\n\t\t\t\t\t\tisWide = (target.offsetWidth > dragEl.offsetWidth),\n\t\t\t\t\t\tisLong = (target.offsetHeight > dragEl.offsetHeight),\n\t\t\t\t\t\thalfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY - targetRect.top) / height) > 0.5,\n\t\t\t\t\t\tnextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false\n\t\t\t\t\t;\n\n\t\t\t\t\tif (floating) {\n\t\t\t\t\t\tvar elTop = dragEl.offsetTop,\n\t\t\t\t\t\t\ttgTop = target.offsetTop;\n\n\t\t\t\t\t\tif (elTop === tgTop) {\n\t\t\t\t\t\t\tafter = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.previousElementSibling === dragEl || dragEl.previousElementSibling === target) {\n\t\t\t\t\t\t\tafter = (evt.clientY - targetRect.top) / height > 0.5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tafter = tgTop > elTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!isMovingBetweenSortable) {\n\t\t\t\t\t\tafter = (nextSibling !== dragEl) && !isLong || halfway && isLong;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\tthis._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = target.getBoundingClientRect();\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = prevRect.getBoundingClientRect();\n\t\t\t\t}\n\n\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t+ (prevRect.left - currentRect.left) + 'px,'\n\t\t\t\t\t+ (prevRect.top - currentRect.top) + 'px,0)'\n\t\t\t\t);\n\n\t\t\t\ttarget.offsetWidth; // repaint\n\n\t\t\t\t_css(target, 'transition', 'all ' + ms + 'ms');\n\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\n\t\t\t\tclearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointercancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\n\t\t\tclearInterval(this._loopId);\n\t\t\tclearInterval(autoScroll.pid);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || Sortable.active.lastPullMode !== 'clone') {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, rootEl, oldIndex);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\n\t\t\tlastEl =\n\t\t\tlastCSS =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragover':\n\t\t\t\tcase 'dragenter':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\ttouchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\n\n\t\t\tthis._onDrop();\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t};\n\n\n\tfunction _cloneHide(sortable, state) {\n\t\tif (sortable.lastPullMode !== 'clone') {\n\t\t\tstate = true;\n\t\t}\n\n\t\tif (cloneEl && (cloneEl.state !== state)) {\n\t\t\t_css(cloneEl, 'display', state ? 'none' : '');\n\n\t\t\tif (!state) {\n\t\t\t\tif (cloneEl.state) {\n\t\t\t\t\tif (sortable.options.group.revertClone) {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t\t\tsortable._animate(dragEl, cloneEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcloneEl.state = state;\n\t\t}\n\t}\n\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\n\t\t\tdo {\n\t\t\t\tif ((selector === '>*' && el.parentNode === ctx) || _matches(el, selector)) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\t/* jshint boss:true */\n\t\t\t} while (el = _getParentOrHost(el));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _getParentOrHost(el) {\n\t\tvar parent = el.host;\n\n\t\treturn (parent && parent.nodeType) ? parent : el.parentNode;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style)) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) {\n\t\tsortable = (sortable || rootEl[expando]);\n\n\t\tvar evt = document.createEvent('Event'),\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\n\t\tevt.initEvent(name, true, true);\n\n\t\tevt.to = rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\trootEl.dispatchEvent(evt);\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\n\t\tevt = document.createEvent('Event');\n\t\tevt.initEvent('move', true, true);\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || toEl.getBoundingClientRect();\n\t\tevt.willInsertAfter = willInsertAfter;\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\t/** @returns {HTMLElement|false} */\n\tfunction _ghostIsLast(el, evt) {\n\t\tvar lastEl = el.lastElementChild,\n\t\t\trect = lastEl.getBoundingClientRect();\n\n\t\t// 5 — min delta\n\t\t// abs — нельзя добавлять, а то глюки при наведении сверху\n\t\treturn (evt.clientY - (rect.top + rect.height) > 5) ||\n\t\t\t(evt.clientX - (rect.left + rect.width) > 5);\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && (selector === '>*' || _matches(el, selector))) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n\t\tif (el) {\n\t\t\tselector = selector.split('.');\n\n\t\t\tvar tag = selector.shift().toUpperCase(),\n\t\t\t\tre = new RegExp('\\\\s(' + selector.join('|') + ')(?=\\\\s)', 'g');\n\n\t\t\treturn (\n\t\t\t\t(tag === '' || el.nodeName.toUpperCase() == tag) &&\n\t\t\t\t(!selector.length || ((' ' + el.className + ' ').match(re) || []).length == selector.length)\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction _throttle(callback, ms) {\n\t\tvar args, _this;\n\n\t\treturn function () {\n\t\t\tif (args === void 0) {\n\t\t\t\targs = arguments;\n\t\t\t\t_this = this;\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\targs = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tfunction _clone(el) {\n\t\treturn $\n\t\t\t? $(el).clone(true)[0]\n\t\t\t: (Polymer && Polymer.dom\n\t\t\t\t? Polymer.dom(el).cloneNode(true)\n\t\t\t\t: el.cloneNode(true)\n\t\t\t);\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\t// Fixed #973: \n\t_on(document, 'touchmove', function (evt) {\n\t\tif (Sortable.active) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\ttry {\n\t\twindow.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n\t\t\tget: function () {\n\t\t\t\tcaptureMode = {\n\t\t\t\t\tcapture: false,\n\t\t\t\t\tpassive: false\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t} catch (err) {}\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tclone: _clone,\n\t\tindex: _index\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.6.1';\n\treturn Sortable;\n});\n\n\n/***/ }),\n\n/***/ \"RdRw\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"YJ15\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"1475f1d2\", content, true);\n\n/***/ }),\n\n/***/ \"YJ15\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".secondPage{background-color:green;width:10rem;height:100%;font-size:16px}[data-dpr=\\\"2\\\"] .secondPage{font-size:32px}[data-dpr=\\\"3\\\"] .secondPage{font-size:48px}.secondPage .title{background-color:red;width:10rem;height:1.33333rem}.secondPage .button{width:2.66667rem;height:1.33333rem}.secondPage .move-around{position:absolute;width:100%;left:0;bottom:0}.secondPage .move-around .list-group{width:100%;min-height:20px}.secondPage .move-around .list-group .list-group-item{position:relative;width:100%;height:50px;background-color:#fff}.secondPage .move-around .list-group .list-group-item .badge{position:absolute;right:0;top:0}\", \"\", {\"version\":3,\"sources\":[\"D:/EastWork/mobile/src/views/secondPage/src/views/secondPage/secondPage.scss\",\"D:/EastWork/mobile/src/views/secondPage/src/assets/css/_mixin.scss\",\"D:/EastWork/mobile/src/views/secondPage/secondPage.scss\"],\"names\":[],\"mappings\":\"AAEA,YACC,uBAAuB,ACetB,YAAwC,ADZzC,YAAW,ACLX,cDMsB,CAqCtB,AEvCC,2BDFA,cAAyB,CACzB,ACGA,2BDDA,cAAyB,CACzB,ADLF,mBAQE,qBAAqB,ACQrB,YAAwC,AAAxC,iBAAwC,CDLxC,AAXF,oBCgBE,iBAAwC,AAAxC,iBAAwC,CDDxC,AAfF,yBAkBE,kBAAkB,AAClB,WAAW,AACX,OAAM,AACN,QAAS,CAmBT,AAxCF,qCAwBG,WAAW,AACX,eAAgB,CAchB,AAvCH,sDA4BI,kBAAkB,AAClB,WAAW,AACX,YAAY,AACZ,qBAAsB,CAOtB,AAtCJ,6DAkCK,kBAAkB,AAClB,QAAQ,AACR,KAAM,CACN\",\"file\":\"secondPage.scss\",\"sourcesContent\":[\"@import \\\"../../assets/css/_mixin.scss\\\";\\r\\n\\r\\n.secondPage{\\r\\n\\tbackground-color: green;\\r\\n\\r\\n\\t@include px2rem(width, 750px);\\r\\n\\theight:100%; \\r\\n\\t@include font-dpr(16px);\\r\\n\\r\\n\\t.title{\\r\\n\\t\\tbackground-color: red;\\r\\n\\t\\t@include px2rem(width, 750px);\\r\\n\\t\\t@include px2rem(height, 100px);\\r\\n\\t}\\r\\n\\t.button{ \\r\\n\\t\\t@include px2rem(width, 200px);\\r\\n\\t\\t@include px2rem(height, 100px);\\r\\n\\t}\\r\\n\\r\\n\\t.move-around{\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\tleft:0;\\r\\n\\t\\tbottom: 0;\\r\\n\\r\\n\\t\\t.list-group {\\r\\n\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\tmin-height: 20px;\\r\\n\\t\\t\\t.list-group-item {\\r\\n\\r\\n\\t\\t\\t\\tposition: relative;\\r\\n\\t\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\t\\theight: 50px;\\r\\n\\t\\t\\t\\tbackground-color: #fff;\\r\\n\\r\\n\\t\\t\\t\\t.badge{\\r\\n\\t\\t\\t\\t\\tposition: absolute;\\r\\n\\t\\t\\t\\t\\tright: 0;\\r\\n\\t\\t\\t\\t\\ttop: 0; \\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n \\r\\n}\",\"@mixin font-dpr($font-size){ \\n\\tfont-size: $font-size; \\n\\t[data-dpr=\\\"2\\\"] & { \\n\\t\\tfont-size: $font-size * 2; \\n\\t}\\n\\t[data-dpr=\\\"3\\\"] & {\\n\\t\\tfont-size: $font-size * 3; \\n\\t} \\n}\\n@mixin px2rem($property,$px-values,$baseline-px:75px,$support-for-ie:false){ \\n\\t//Conver the baseline into rems \\n\\t$baseline-rem: $baseline-px / 1rem * 1; \\n\\t//Print the first line in pixel values \\n\\t@if $support-for-ie { \\n\\t\\t#{$property}: $px-values; \\n\\t} \\n\\t//if there is only one (numeric) value, return the property/value line for it. \\n\\t@if type-of($px-values) == \\\"number\\\"{ \\n\\t\\t#{$property}: $px-values / $baseline-rem; \\n\\t} @else {\\n\\t\\t//Create an empty list that we can dump values into \\n\\t\\t$rem-values:(); \\n\\t\\t@each $value in $px-values{ \\n\\t\\t// If the value is zero or not a number, return it \\n\\t\\t\\t@if $value == 0 or type-of($value) == \\\"number\\\"{ \\n\\t\\t\\t\\t$rem-values: append($rem-values, $value / $baseline-rem); \\n\\t\\t\\t} \\n\\t\\t} \\n\\t\\t// Return the property and its list of converted values \\n\\t\\t#{$property}: $rem-values; \\n\\t} \\n}\\n\\n$component-pic-url:\\\"../../assets/images/\\\";\\n$view-pic-url:\\\"../../assets/images/\\\";\\n\",\".secondPage {\\n  background-color: green;\\n  width: 10rem;\\n  height: 100%;\\n  font-size: 16px; }\\n  [data-dpr=\\\"2\\\"] .secondPage {\\n    font-size: 32px; }\\n  [data-dpr=\\\"3\\\"] .secondPage {\\n    font-size: 48px; }\\n  .secondPage .title {\\n    background-color: red;\\n    width: 10rem;\\n    height: 1.33333rem; }\\n  .secondPage .button {\\n    width: 2.66667rem;\\n    height: 1.33333rem; }\\n  .secondPage .move-around {\\n    position: absolute;\\n    width: 100%;\\n    left: 0;\\n    bottom: 0; }\\n    .secondPage .move-around .list-group {\\n      width: 100%;\\n      min-height: 20px; }\\n      .secondPage .move-around .list-group .list-group-item {\\n        position: relative;\\n        width: 100%;\\n        height: 50px;\\n        background-color: #fff; }\\n        .secondPage .move-around .list-group .list-group-item .badge {\\n          position: absolute;\\n          right: 0;\\n          top: 0; }\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"giW7\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(\"Dd8w\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__secondPage_scss__ = __webpack_require__(\"RdRw\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__secondPage_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__secondPage_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vuex__ = __webpack_require__(\"NYxO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vuedraggable__ = __webpack_require__(\"DAYN\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vuedraggable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_vuedraggable__);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\nvar message = ['vue.draggable', 'draggable', 'component', 'for', 'vue.js 2.0', 'based', 'on', 'Sortablejs'];\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    data: function data() {\n        // console.log(\"---------- data -----------\");\n        var self = this;\n\n        return {\n            list: message.map(function (name, index) {\n                return { name: name, order: index + 1 };\n            })\n        };\n    },\n\n    props: {},\n    created: function created() {\n        // console.log(\"---------- created -----------\");\n    },\n    updated: function updated() {\n        // console.log(\"---------- updated -----------\");\n    },\n\n    components: {\n        // console.log(\"---------- components -----------\");\n        draggable: __WEBPACK_IMPORTED_MODULE_3_vuedraggable___default.a\n    },\n\n    mounted: function mounted() {\n        // console.log(\"---------- mounted -----------\");\n        var self = this;\n    },\n\n\n    computed: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"b\" /* mapGetters */])({\n        numb: \"Gnumb\"\n    }), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"a\" /* mapState */])({\n        count: function count(state) {\n            return state.secondPage.count;\n        }\n    }), {\n        dragOptions: function dragOptions() {\n            return {\n                animation: 0,\n                group: 'description',\n                disabled: false,\n                ghostClass: 'ghost'\n            };\n        }\n    }),\n\n    watch: {},\n    methods: {\n        handlePage: function handlePage() {\n            this.$router.push('/thirdPage');\n        },\n        handleButton: function handleButton() {\n            this.$store.dispatch('secondPage/actionA');\n        },\n        handleNoop: function handleNoop() {\n            //noop\n        }\n    }\n\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/3.2e7c2b6d4f081754f72f.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"secondPage\"\n  }, [_c('p', {\n    staticClass: \"title\",\n    on: {\n      \"click\": function($event) {\n        _vm.handlePage()\n      }\n    }\n  }, [_vm._v(\"secondPage\")]), _vm._v(\" \"), _c('p', [_vm._v(\"第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"button\",\n    on: {\n      \"click\": function($event) {\n        _vm.handleButton()\n      }\n    }\n  }, [_vm._v(\"dian\")]), _vm._v(\" \"), _c('p', [_vm._v(\"count:\" + _vm._s(_vm.count))]), _vm._v(\" \"), _c('p', [_vm._v(\"numb:\" + _vm._s(_vm.numb))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"move-around\"\n  }, [_c('div', {\n    staticClass: \"title\"\n  }, [_vm._v(\"请选择\")]), _vm._v(\" \"), _c('draggable', {\n    staticClass: \"list-group\",\n    attrs: {\n      \"element\": \"ul\",\n      \"options\": _vm.dragOptions\n    },\n    model: {\n      value: (_vm.list),\n      callback: function($$v) {\n        _vm.list = $$v\n      },\n      expression: \"list\"\n    }\n  }, [_c('transition-group', {\n    attrs: {\n      \"type\": \"transition\",\n      \"name\": 'flip-list'\n    }\n  }, _vm._l((_vm.list), function(element) {\n    return _c('li', {\n      key: element.order,\n      staticClass: \"list-group-item\"\n    }, [_vm._v(\" \\n                \" + _vm._s(element.name) + \"\\n                \"), _c('span', {\n      staticClass: \"badge\"\n    }, [_vm._v(_vm._s(element.order))])])\n  }))], 1)], 1)])\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-b67bdcb8\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/secondPage/secondPage.vue\n// module id = 1sTC\n// module chunks = 3","'use strict';\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n(function () {\n  \"use strict\";\n\n  if (!Array.from) {\n    Array.from = function (object) {\n      return [].slice.call(object);\n    };\n  }\n\n  function buildDraggable(Sortable) {\n    function removeNode(node) {\n      node.parentElement.removeChild(node);\n    }\n\n    function insertNodeAt(fatherNode, node, position) {\n      var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;\n      fatherNode.insertBefore(node, refNode);\n    }\n\n    function computeVmIndex(vnodes, element) {\n      return vnodes.map(function (elt) {\n        return elt.elm;\n      }).indexOf(element);\n    }\n\n    function _computeIndexes(slots, children, isTransition) {\n      if (!slots) {\n        return [];\n      }\n\n      var elmFromNodes = slots.map(function (elt) {\n        return elt.elm;\n      });\n      var rawIndexes = [].concat(_toConsumableArray(children)).map(function (elt) {\n        return elmFromNodes.indexOf(elt);\n      });\n      return isTransition ? rawIndexes.filter(function (ind) {\n        return ind !== -1;\n      }) : rawIndexes;\n    }\n\n    function emit(evtName, evtData) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        return _this.$emit(evtName.toLowerCase(), evtData);\n      });\n    }\n\n    function delegateAndEmit(evtName) {\n      var _this2 = this;\n\n      return function (evtData) {\n        if (_this2.realList !== null) {\n          _this2['onDrag' + evtName](evtData);\n        }\n        emit.call(_this2, evtName, evtData);\n      };\n    }\n\n    var eventsListened = ['Start', 'Add', 'Remove', 'Update', 'End'];\n    var eventsToEmit = ['Choose', 'Sort', 'Filter', 'Clone'];\n    var readonlyProperties = ['Move'].concat(eventsListened, eventsToEmit).map(function (evt) {\n      return 'on' + evt;\n    });\n    var draggingElement = null;\n\n    var props = {\n      options: Object,\n      list: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      value: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      noTransitionOnDrag: {\n        type: Boolean,\n        default: false\n      },\n      clone: {\n        type: Function,\n        default: function _default(original) {\n          return original;\n        }\n      },\n      element: {\n        type: String,\n        default: 'div'\n      },\n      move: {\n        type: Function,\n        default: null\n      }\n    };\n\n    var draggableComponent = {\n      name: 'draggable',\n\n      props: props,\n\n      data: function data() {\n        return {\n          transitionMode: false,\n          componentMode: false\n        };\n      },\n      render: function render(h) {\n        var slots = this.$slots.default;\n        if (slots && slots.length === 1) {\n          var child = slots[0];\n          if (child.componentOptions && child.componentOptions.tag === \"transition-group\") {\n            this.transitionMode = true;\n          }\n        }\n        var children = slots;\n        var footer = this.$slots.footer;\n\n        if (footer) {\n          children = slots ? [].concat(_toConsumableArray(slots), _toConsumableArray(footer)) : [].concat(_toConsumableArray(footer));\n        }\n        return h(this.element, null, children);\n      },\n      mounted: function mounted() {\n        var _this3 = this;\n\n        this.componentMode = this.element.toLowerCase() !== this.$el.nodeName.toLowerCase();\n        if (this.componentMode && this.transitionMode) {\n          throw new Error('Transition-group inside component is not supported. Please alter element value or remove transition-group. Current element value: ' + this.element);\n        }\n        var optionsAdded = {};\n        eventsListened.forEach(function (elt) {\n          optionsAdded['on' + elt] = delegateAndEmit.call(_this3, elt);\n        });\n\n        eventsToEmit.forEach(function (elt) {\n          optionsAdded['on' + elt] = emit.bind(_this3, elt);\n        });\n\n        var options = _extends({}, this.options, optionsAdded, { onMove: function onMove(evt, originalEvent) {\n            return _this3.onDragMove(evt, originalEvent);\n          } });\n        !('draggable' in options) && (options.draggable = '>*');\n        this._sortable = new Sortable(this.rootContainer, options);\n        this.computeIndexes();\n      },\n      beforeDestroy: function beforeDestroy() {\n        this._sortable.destroy();\n      },\n\n\n      computed: {\n        rootContainer: function rootContainer() {\n          return this.transitionMode ? this.$el.children[0] : this.$el;\n        },\n        isCloning: function isCloning() {\n          return !!this.options && !!this.options.group && this.options.group.pull === 'clone';\n        },\n        realList: function realList() {\n          return !!this.list ? this.list : this.value;\n        }\n      },\n\n      watch: {\n        options: {\n          handler: function handler(newOptionValue) {\n            for (var property in newOptionValue) {\n              if (readonlyProperties.indexOf(property) == -1) {\n                this._sortable.option(property, newOptionValue[property]);\n              }\n            }\n          },\n\n          deep: true\n        },\n\n        realList: function realList() {\n          this.computeIndexes();\n        }\n      },\n\n      methods: {\n        getChildrenNodes: function getChildrenNodes() {\n          if (this.componentMode) {\n            return this.$children[0].$slots.default;\n          }\n          var rawNodes = this.$slots.default;\n          return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;\n        },\n        computeIndexes: function computeIndexes() {\n          var _this4 = this;\n\n          this.$nextTick(function () {\n            _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children, _this4.transitionMode);\n          });\n        },\n        getUnderlyingVm: function getUnderlyingVm(htmlElt) {\n          var index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);\n          if (index === -1) {\n            //Edge case during move callback: related element might be\n            //an element different from collection\n            return null;\n          }\n          var element = this.realList[index];\n          return { index: index, element: element };\n        },\n        getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref) {\n          var __vue__ = _ref.__vue__;\n\n          if (!__vue__ || !__vue__.$options || __vue__.$options._componentTag !== \"transition-group\") {\n            return __vue__;\n          }\n          return __vue__.$parent;\n        },\n        emitChanges: function emitChanges(evt) {\n          var _this5 = this;\n\n          this.$nextTick(function () {\n            _this5.$emit('change', evt);\n          });\n        },\n        alterList: function alterList(onList) {\n          if (!!this.list) {\n            onList(this.list);\n          } else {\n            var newList = [].concat(_toConsumableArray(this.value));\n            onList(newList);\n            this.$emit('input', newList);\n          }\n        },\n        spliceList: function spliceList() {\n          var _arguments = arguments;\n\n          var spliceList = function spliceList(list) {\n            return list.splice.apply(list, _arguments);\n          };\n          this.alterList(spliceList);\n        },\n        updatePosition: function updatePosition(oldIndex, newIndex) {\n          var updatePosition = function updatePosition(list) {\n            return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\n          };\n          this.alterList(updatePosition);\n        },\n        getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref2) {\n          var to = _ref2.to,\n              related = _ref2.related;\n\n          var component = this.getUnderlyingPotencialDraggableComponent(to);\n          if (!component) {\n            return { component: component };\n          }\n          var list = component.realList;\n          var context = { list: list, component: component };\n          if (to !== related && list && component.getUnderlyingVm) {\n            var destination = component.getUnderlyingVm(related);\n            if (destination) {\n              return _extends(destination, context);\n            }\n          }\n\n          return context;\n        },\n        getVmIndex: function getVmIndex(domIndex) {\n          var indexes = this.visibleIndexes;\n          var numberIndexes = indexes.length;\n          return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];\n        },\n        getComponent: function getComponent() {\n          return this.$slots.default[0].componentInstance;\n        },\n        resetTransitionData: function resetTransitionData(index) {\n          if (!this.noTransitionOnDrag || !this.transitionMode) {\n            return;\n          }\n          var nodes = this.getChildrenNodes();\n          nodes[index].data = null;\n          var transitionContainer = this.getComponent();\n          transitionContainer.children = [];\n          transitionContainer.kept = undefined;\n        },\n        onDragStart: function onDragStart(evt) {\n          this.context = this.getUnderlyingVm(evt.item);\n          evt.item._underlying_vm_ = this.clone(this.context.element);\n          draggingElement = evt.item;\n        },\n        onDragAdd: function onDragAdd(evt) {\n          var element = evt.item._underlying_vm_;\n          if (element === undefined) {\n            return;\n          }\n          removeNode(evt.item);\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.spliceList(newIndex, 0, element);\n          this.computeIndexes();\n          var added = { element: element, newIndex: newIndex };\n          this.emitChanges({ added: added });\n        },\n        onDragRemove: function onDragRemove(evt) {\n          insertNodeAt(this.rootContainer, evt.item, evt.oldIndex);\n          if (this.isCloning) {\n            removeNode(evt.clone);\n            return;\n          }\n          var oldIndex = this.context.index;\n          this.spliceList(oldIndex, 1);\n          var removed = { element: this.context.element, oldIndex: oldIndex };\n          this.resetTransitionData(oldIndex);\n          this.emitChanges({ removed: removed });\n        },\n        onDragUpdate: function onDragUpdate(evt) {\n          removeNode(evt.item);\n          insertNodeAt(evt.from, evt.item, evt.oldIndex);\n          var oldIndex = this.context.index;\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.updatePosition(oldIndex, newIndex);\n          var moved = { element: this.context.element, oldIndex: oldIndex, newIndex: newIndex };\n          this.emitChanges({ moved: moved });\n        },\n        computeFutureIndex: function computeFutureIndex(relatedContext, evt) {\n          if (!relatedContext.element) {\n            return 0;\n          }\n          var domChildren = [].concat(_toConsumableArray(evt.to.children)).filter(function (el) {\n            return el.style['display'] !== 'none';\n          });\n          var currentDOMIndex = domChildren.indexOf(evt.related);\n          var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);\n          var draggedInList = domChildren.indexOf(draggingElement) != -1;\n          return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;\n        },\n        onDragMove: function onDragMove(evt, originalEvent) {\n          var onMove = this.move;\n          if (!onMove || !this.realList) {\n            return true;\n          }\n\n          var relatedContext = this.getRelatedContextFromMoveEvent(evt);\n          var draggedContext = this.context;\n          var futureIndex = this.computeFutureIndex(relatedContext, evt);\n          _extends(draggedContext, { futureIndex: futureIndex });\n          _extends(evt, { relatedContext: relatedContext, draggedContext: draggedContext });\n          return onMove(evt, originalEvent);\n        },\n        onDragEnd: function onDragEnd(evt) {\n          this.computeIndexes();\n          draggingElement = null;\n        }\n      }\n    };\n    return draggableComponent;\n  }\n\n  if (typeof exports == \"object\") {\n    var Sortable = require(\"sortablejs\");\n    module.exports = buildDraggable(Sortable);\n  } else if (typeof define == \"function\" && define.amd) {\n    define(['sortablejs'], function (Sortable) {\n      return buildDraggable(Sortable);\n    });\n  } else if (window && window.Vue && window.Sortable) {\n    var draggable = buildDraggable(window.Sortable);\n    Vue.component('draggable', draggable);\n  }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vuedraggable/dist/vuedraggable.js\n// module id = DAYN\n// module chunks = 3","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./secondPage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b67bdcb8\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./secondPage.vue\"\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/secondPage/secondPage.vue\n// module id = DxDx\n// module chunks = 3","/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @license MIT\n */\n\n(function sortableModule(factory) {\n\t\"use strict\";\n\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(factory);\n\t}\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n\t\tmodule.exports = factory();\n\t}\n\telse {\n\t\t/* jshint sub:true */\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function sortableFactory() {\n\t\"use strict\";\n\n\tif (typeof window == \"undefined\" || !window.document) {\n\t\treturn function sortableError() {\n\t\t\tthrow new Error(\"Sortable.js requires a window with a document\");\n\t\t};\n\t}\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\tlastEl,\n\t\tlastCSS,\n\t\tlastParentCSS,\n\n\t\toldIndex,\n\t\tnewIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScroll = {},\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\t\tR_FLOAT = /left|right|inline/,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\n\t\t$ = win.jQuery || win.Zepto,\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = false,\n\n\t\tsupportDraggable = !!('draggable' in document.createElement('div')),\n\t\tsupportCssPointerEvents = (function (el) {\n\t\t\t// false when IE11\n\t\t\tif (!!navigator.userAgent.match(/Trident.*rv[ :]?11\\./)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tel = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\n\t\tsavedInputChecked = [],\n\t\ttouchDragOverListeners = [],\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (rootEl && options.scroll) {\n\t\t\t\tvar _this = rootEl[expando],\n\t\t\t\t\tel,\n\t\t\t\t\trect,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinWidth = window.innerWidth,\n\t\t\t\t\twinHeight = window.innerHeight,\n\n\t\t\t\t\tvx,\n\t\t\t\t\tvy,\n\n\t\t\t\t\tscrollOffsetX,\n\t\t\t\t\tscrollOffsetY\n\t\t\t\t;\n\n\t\t\t\t// Delect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollParentEl = rootEl;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = rootEl;\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif ((scrollEl.offsetWidth < scrollEl.scrollWidth) ||\n\t\t\t\t\t\t\t\t(scrollEl.offsetHeight < scrollEl.scrollHeight)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\t\t} while (scrollEl = scrollEl.parentNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (scrollEl) {\n\t\t\t\t\tel = scrollEl;\n\t\t\t\t\trect = scrollEl.getBoundingClientRect();\n\t\t\t\t\tvx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);\n\t\t\t\t\tvy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);\n\t\t\t\t}\n\n\n\t\t\t\tif (!(vx || vy)) {\n\t\t\t\t\tvx = (winWidth - x <= sens) - (x <= sens);\n\t\t\t\t\tvy = (winHeight - y <= sens) - (y <= sens);\n\n\t\t\t\t\t/* jshint expr:true */\n\t\t\t\t\t(vx || vy) && (el = win);\n\t\t\t\t}\n\n\n\t\t\t\tif (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {\n\t\t\t\t\tautoScroll.el = el;\n\t\t\t\t\tautoScroll.vx = vx;\n\t\t\t\t\tautoScroll.vy = vy;\n\n\t\t\t\t\tclearInterval(autoScroll.pid);\n\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tautoScroll.pid = setInterval(function () {\n\t\t\t\t\t\t\tscrollOffsetY = vy ? vy * speed : 0;\n\t\t\t\t\t\t\tscrollOffsetX = vx ? vx * speed : 0;\n\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\treturn scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (el === win) {\n\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tel.scrollTop += scrollOffsetY;\n\t\t\t\t\t\t\t\tel.scrollLeft += scrollOffsetX;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 24);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 30),\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\tif (value === void 0 || value === true) {\n\t\t\t\t\tvalue = group.name;\n\t\t\t\t}\n\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn function (to, from) {\n\t\t\t\t\t\tvar fromGroup = from.options.group.name;\n\n\t\t\t\t\t\treturn pull\n\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t: value && (value.join\n\t\t\t\t\t\t\t\t? value.indexOf(fromGroup) > -1\n\t\t\t\t\t\t\t\t: (fromGroup == value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t}\n\t;\n\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: Math.random(),\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0}\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t// Bind events\n\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t_on(el, 'touchstart', this._onTapStart);\n\t\t_on(el, 'pointerdown', this._onTapStart);\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\ttouchDragOverListeners.push(this._onDragOver);\n\n\t\t// Restore sorting\n\t\toptions.store && this.sort(options.store.get(this));\n\t}\n\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && (evt.path && evt.path[0]) || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button or enabled\n\t\t\t}\n\n\n\t\t\ttarget = _closest(target, options.draggable, el);\n\n\t\t\tif (!target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, startIndex);\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, startIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\ttapEvt = evt;\n\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'transform';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDrag();\n\n\t\t\t\t\t// Make the element draggable\n\t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, oldIndex);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'pointercancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'selectstart', _this);\n\n\t\t\t\tif (options.delay) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'pointermove', _this._disableDelayedDrag);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchmove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'pointermove', this._disableDelayedDrag);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n\t\t\tif (touch) {\n\t\t\t\t// Touch device support\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\tclientY: touch.clientY\n\t\t\t\t};\n\n\t\t\t\tthis._onDragStart(tapEvt, 'touch');\n\t\t\t}\n\t\t\telse if (!this.nativeDraggable) {\n\t\t\t\tthis._onDragStart(tapEvt, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function () {\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t_toggleClass(dragEl, options.dragClass, false);\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, oldIndex);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function () {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t\t}\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),\n\t\t\t\t\tparent = target,\n\t\t\t\t\ti = touchDragOverListeners.length;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\ttouchDragOverListeners[i]({\n\t\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tdx = (touch.clientX - tapEvt.clientX) + fallbackOffset.x,\n\t\t\t\t\tdy = (touch.clientY - tapEvt.clientY) + fallbackOffset.y,\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._dragStarted();\n\t\t\t\t}\n\n\t\t\t\t// as well as creating the ghost element on the document body\n\t\t\t\tthis._appendGhost();\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar rect = dragEl.getBoundingClientRect(),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options,\n\t\t\t\t\tghostRect;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\n\t\t\t\t_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\n\n\t\t\t\t// Fixing dimensions.\n\t\t\t\tghostRect = ghostEl.getBoundingClientRect();\n\t\t\t\t_css(ghostEl, 'width', rect.width * 2 - ghostRect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height * 2 - ghostRect.height);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/useFallback) {\n\t\t\tvar dataTransfer = evt.dataTransfer,\n\t\t\t\toptions = this.options;\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (activeGroup.checkPull(this, this, dragEl, evt)) {\n\t\t\t\tcloneEl = _clone(dragEl);\n\n\t\t\t\tcloneEl.draggable = false;\n\t\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\t_toggleClass(cloneEl, this.options.chosenClass, false);\n\n\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t_dispatchEvent(this, rootEl, 'clone', dragEl);\n\t\t\t}\n\n\t\t\t_toggleClass(dragEl, options.dragClass, true);\n\n\t\t\tif (useFallback) {\n\t\t\t\tif (useFallback === 'touch') {\n\t\t\t\t\t// Bind touch events\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'touchend', this._onDrop);\n\t\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'pointerup', this._onDrop);\n\t\t\t\t} else {\n\t\t\t\t\t// Old brwoser\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'mouseup', this._onDrop);\n\t\t\t\t}\n\n\t\t\t\tthis._loopId = setInterval(this._emulateDragOver, 50);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', this);\n\t\t\t\tsetTimeout(this._dragStarted, 0);\n\t\t\t}\n\t\t},\n\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tisMovingBetweenSortable = false,\n\t\t\t\tcanSort = options.sort;\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.preventDefault();\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation();\n\t\t\t}\n\n\t\t\tif (dragEl.animated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmoved = true;\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(activeSortable.lastPullMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) &&\n\t\t\t\t(evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback\n\t\t\t) {\n\t\t\t\t// Smart auto-scrolling\n\t\t\t\t_autoScroll(evt, options, this.el);\n\n\t\t\t\tif (_silent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttarget = _closest(evt.target, options.draggable, el);\n\t\t\t\tdragRect = dragEl.getBoundingClientRect();\n\n\t\t\t\tif (putSortable !== this) {\n\t\t\t\t\tputSortable = this;\n\t\t\t\t\tisMovingBetweenSortable = true;\n\t\t\t\t}\n\n\t\t\t\tif (revert) {\n\t\t\t\t\t_cloneHide(activeSortable, true);\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (cloneEl || nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, cloneEl || nextEl);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!canSort) {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n\t\t\t\t\t(el === evt.target) && (_ghostIsLast(el, evt))\n\t\t\t\t) {\n\t\t\t\t\t//assign target only if condition is true\n\t\t\t\t\tif (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {\n\t\t\t\t\t\ttarget = el.lastElementChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tif (target.animated) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\t\t\t\t\t}\n\n\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt) !== false) {\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && !target.animated && target !== dragEl && (target.parentNode[expando] !== void 0)) {\n\t\t\t\t\tif (lastEl !== target) {\n\t\t\t\t\t\tlastEl = target;\n\t\t\t\t\t\tlastCSS = _css(target);\n\t\t\t\t\t\tlastParentCSS = _css(target.parentNode);\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\n\t\t\t\t\tvar width = targetRect.right - targetRect.left,\n\t\t\t\t\t\theight = targetRect.bottom - targetRect.top,\n\t\t\t\t\t\tfloating = R_FLOAT.test(lastCSS.cssFloat + lastCSS.display)\n\t\t\t\t\t\t\t|| (lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].indexOf('row') === 0),\n\t\t\t\t\t\tisWide = (target.offsetWidth > dragEl.offsetWidth),\n\t\t\t\t\t\tisLong = (target.offsetHeight > dragEl.offsetHeight),\n\t\t\t\t\t\thalfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY - targetRect.top) / height) > 0.5,\n\t\t\t\t\t\tnextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false\n\t\t\t\t\t;\n\n\t\t\t\t\tif (floating) {\n\t\t\t\t\t\tvar elTop = dragEl.offsetTop,\n\t\t\t\t\t\t\ttgTop = target.offsetTop;\n\n\t\t\t\t\t\tif (elTop === tgTop) {\n\t\t\t\t\t\t\tafter = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.previousElementSibling === dragEl || dragEl.previousElementSibling === target) {\n\t\t\t\t\t\t\tafter = (evt.clientY - targetRect.top) / height > 0.5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tafter = tgTop > elTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!isMovingBetweenSortable) {\n\t\t\t\t\t\tafter = (nextSibling !== dragEl) && !isLong || halfway && isLong;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\tthis._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = target.getBoundingClientRect();\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = prevRect.getBoundingClientRect();\n\t\t\t\t}\n\n\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t+ (prevRect.left - currentRect.left) + 'px,'\n\t\t\t\t\t+ (prevRect.top - currentRect.top) + 'px,0)'\n\t\t\t\t);\n\n\t\t\t\ttarget.offsetWidth; // repaint\n\n\t\t\t\t_css(target, 'transition', 'all ' + ms + 'ms');\n\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\n\t\t\t\tclearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointercancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\n\t\t\tclearInterval(this._loopId);\n\t\t\tclearInterval(autoScroll.pid);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || Sortable.active.lastPullMode !== 'clone') {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, rootEl, oldIndex);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\n\t\t\tlastEl =\n\t\t\tlastCSS =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragover':\n\t\t\t\tcase 'dragenter':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\ttouchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\n\n\t\t\tthis._onDrop();\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t};\n\n\n\tfunction _cloneHide(sortable, state) {\n\t\tif (sortable.lastPullMode !== 'clone') {\n\t\t\tstate = true;\n\t\t}\n\n\t\tif (cloneEl && (cloneEl.state !== state)) {\n\t\t\t_css(cloneEl, 'display', state ? 'none' : '');\n\n\t\t\tif (!state) {\n\t\t\t\tif (cloneEl.state) {\n\t\t\t\t\tif (sortable.options.group.revertClone) {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t\t\tsortable._animate(dragEl, cloneEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcloneEl.state = state;\n\t\t}\n\t}\n\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\n\t\t\tdo {\n\t\t\t\tif ((selector === '>*' && el.parentNode === ctx) || _matches(el, selector)) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\t/* jshint boss:true */\n\t\t\t} while (el = _getParentOrHost(el));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _getParentOrHost(el) {\n\t\tvar parent = el.host;\n\n\t\treturn (parent && parent.nodeType) ? parent : el.parentNode;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style)) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) {\n\t\tsortable = (sortable || rootEl[expando]);\n\n\t\tvar evt = document.createEvent('Event'),\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\n\t\tevt.initEvent(name, true, true);\n\n\t\tevt.to = rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\trootEl.dispatchEvent(evt);\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\n\t\tevt = document.createEvent('Event');\n\t\tevt.initEvent('move', true, true);\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || toEl.getBoundingClientRect();\n\t\tevt.willInsertAfter = willInsertAfter;\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\t/** @returns {HTMLElement|false} */\n\tfunction _ghostIsLast(el, evt) {\n\t\tvar lastEl = el.lastElementChild,\n\t\t\trect = lastEl.getBoundingClientRect();\n\n\t\t// 5 — min delta\n\t\t// abs — нельзя добавлять, а то глюки при наведении сверху\n\t\treturn (evt.clientY - (rect.top + rect.height) > 5) ||\n\t\t\t(evt.clientX - (rect.left + rect.width) > 5);\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && (selector === '>*' || _matches(el, selector))) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n\t\tif (el) {\n\t\t\tselector = selector.split('.');\n\n\t\t\tvar tag = selector.shift().toUpperCase(),\n\t\t\t\tre = new RegExp('\\\\s(' + selector.join('|') + ')(?=\\\\s)', 'g');\n\n\t\t\treturn (\n\t\t\t\t(tag === '' || el.nodeName.toUpperCase() == tag) &&\n\t\t\t\t(!selector.length || ((' ' + el.className + ' ').match(re) || []).length == selector.length)\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction _throttle(callback, ms) {\n\t\tvar args, _this;\n\n\t\treturn function () {\n\t\t\tif (args === void 0) {\n\t\t\t\targs = arguments;\n\t\t\t\t_this = this;\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\targs = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tfunction _clone(el) {\n\t\treturn $\n\t\t\t? $(el).clone(true)[0]\n\t\t\t: (Polymer && Polymer.dom\n\t\t\t\t? Polymer.dom(el).cloneNode(true)\n\t\t\t\t: el.cloneNode(true)\n\t\t\t);\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\t// Fixed #973: \n\t_on(document, 'touchmove', function (evt) {\n\t\tif (Sortable.active) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\ttry {\n\t\twindow.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n\t\t\tget: function () {\n\t\t\t\tcaptureMode = {\n\t\t\t\t\tcapture: false,\n\t\t\t\t\tpassive: false\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t} catch (err) {}\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tclone: _clone,\n\t\tindex: _index\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.6.1';\n\treturn Sortable;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sortablejs/Sortable.js\n// module id = Lokx\n// module chunks = 3","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--9-2!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./secondPage.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"1475f1d2\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/secondPage/secondPage.scss\n// module id = RdRw\n// module chunks = 3","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".secondPage{background-color:green;width:10rem;height:100%;font-size:16px}[data-dpr=\\\"2\\\"] .secondPage{font-size:32px}[data-dpr=\\\"3\\\"] .secondPage{font-size:48px}.secondPage .title{background-color:red;width:10rem;height:1.33333rem}.secondPage .button{width:2.66667rem;height:1.33333rem}.secondPage .move-around{position:absolute;width:100%;left:0;bottom:0}.secondPage .move-around .list-group{width:100%;min-height:20px}.secondPage .move-around .list-group .list-group-item{position:relative;width:100%;height:50px;background-color:#fff}.secondPage .move-around .list-group .list-group-item .badge{position:absolute;right:0;top:0}\", \"\", {\"version\":3,\"sources\":[\"D:/EastWork/mobile/src/views/secondPage/src/views/secondPage/secondPage.scss\",\"D:/EastWork/mobile/src/views/secondPage/src/assets/css/_mixin.scss\",\"D:/EastWork/mobile/src/views/secondPage/secondPage.scss\"],\"names\":[],\"mappings\":\"AAEA,YACC,uBAAuB,ACetB,YAAwC,ADZzC,YAAW,ACLX,cDMsB,CAqCtB,AEvCC,2BDFA,cAAyB,CACzB,ACGA,2BDDA,cAAyB,CACzB,ADLF,mBAQE,qBAAqB,ACQrB,YAAwC,AAAxC,iBAAwC,CDLxC,AAXF,oBCgBE,iBAAwC,AAAxC,iBAAwC,CDDxC,AAfF,yBAkBE,kBAAkB,AAClB,WAAW,AACX,OAAM,AACN,QAAS,CAmBT,AAxCF,qCAwBG,WAAW,AACX,eAAgB,CAchB,AAvCH,sDA4BI,kBAAkB,AAClB,WAAW,AACX,YAAY,AACZ,qBAAsB,CAOtB,AAtCJ,6DAkCK,kBAAkB,AAClB,QAAQ,AACR,KAAM,CACN\",\"file\":\"secondPage.scss\",\"sourcesContent\":[\"@import \\\"../../assets/css/_mixin.scss\\\";\\r\\n\\r\\n.secondPage{\\r\\n\\tbackground-color: green;\\r\\n\\r\\n\\t@include px2rem(width, 750px);\\r\\n\\theight:100%; \\r\\n\\t@include font-dpr(16px);\\r\\n\\r\\n\\t.title{\\r\\n\\t\\tbackground-color: red;\\r\\n\\t\\t@include px2rem(width, 750px);\\r\\n\\t\\t@include px2rem(height, 100px);\\r\\n\\t}\\r\\n\\t.button{ \\r\\n\\t\\t@include px2rem(width, 200px);\\r\\n\\t\\t@include px2rem(height, 100px);\\r\\n\\t}\\r\\n\\r\\n\\t.move-around{\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\tleft:0;\\r\\n\\t\\tbottom: 0;\\r\\n\\r\\n\\t\\t.list-group {\\r\\n\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\tmin-height: 20px;\\r\\n\\t\\t\\t.list-group-item {\\r\\n\\r\\n\\t\\t\\t\\tposition: relative;\\r\\n\\t\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\t\\theight: 50px;\\r\\n\\t\\t\\t\\tbackground-color: #fff;\\r\\n\\r\\n\\t\\t\\t\\t.badge{\\r\\n\\t\\t\\t\\t\\tposition: absolute;\\r\\n\\t\\t\\t\\t\\tright: 0;\\r\\n\\t\\t\\t\\t\\ttop: 0; \\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n \\r\\n}\",\"@mixin font-dpr($font-size){ \\n\\tfont-size: $font-size; \\n\\t[data-dpr=\\\"2\\\"] & { \\n\\t\\tfont-size: $font-size * 2; \\n\\t}\\n\\t[data-dpr=\\\"3\\\"] & {\\n\\t\\tfont-size: $font-size * 3; \\n\\t} \\n}\\n@mixin px2rem($property,$px-values,$baseline-px:75px,$support-for-ie:false){ \\n\\t//Conver the baseline into rems \\n\\t$baseline-rem: $baseline-px / 1rem * 1; \\n\\t//Print the first line in pixel values \\n\\t@if $support-for-ie { \\n\\t\\t#{$property}: $px-values; \\n\\t} \\n\\t//if there is only one (numeric) value, return the property/value line for it. \\n\\t@if type-of($px-values) == \\\"number\\\"{ \\n\\t\\t#{$property}: $px-values / $baseline-rem; \\n\\t} @else {\\n\\t\\t//Create an empty list that we can dump values into \\n\\t\\t$rem-values:(); \\n\\t\\t@each $value in $px-values{ \\n\\t\\t// If the value is zero or not a number, return it \\n\\t\\t\\t@if $value == 0 or type-of($value) == \\\"number\\\"{ \\n\\t\\t\\t\\t$rem-values: append($rem-values, $value / $baseline-rem); \\n\\t\\t\\t} \\n\\t\\t} \\n\\t\\t// Return the property and its list of converted values \\n\\t\\t#{$property}: $rem-values; \\n\\t} \\n}\\n\\n$component-pic-url:\\\"../../assets/images/\\\";\\n$view-pic-url:\\\"../../assets/images/\\\";\\n\",\".secondPage {\\n  background-color: green;\\n  width: 10rem;\\n  height: 100%;\\n  font-size: 16px; }\\n  [data-dpr=\\\"2\\\"] .secondPage {\\n    font-size: 32px; }\\n  [data-dpr=\\\"3\\\"] .secondPage {\\n    font-size: 48px; }\\n  .secondPage .title {\\n    background-color: red;\\n    width: 10rem;\\n    height: 1.33333rem; }\\n  .secondPage .button {\\n    width: 2.66667rem;\\n    height: 1.33333rem; }\\n  .secondPage .move-around {\\n    position: absolute;\\n    width: 100%;\\n    left: 0;\\n    bottom: 0; }\\n    .secondPage .move-around .list-group {\\n      width: 100%;\\n      min-height: 20px; }\\n      .secondPage .move-around .list-group .list-group-item {\\n        position: relative;\\n        width: 100%;\\n        height: 50px;\\n        background-color: #fff; }\\n        .secondPage .move-around .list-group .list-group-item .badge {\\n          position: absolute;\\n          right: 0;\\n          top: 0; }\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./src/views/secondPage/secondPage.scss\n// module id = YJ15\n// module chunks = 3","<template>\r\n\r\n  <div class=\"secondPage\">\r\n\r\n    <p class=\"title\" v-on:click=\"handlePage()\">secondPage</p>\r\n    <p>第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页</p>\r\n  \r\n    <button class=\"button\" v-on:click=\"handleButton()\">dian</button>  \r\n    <p>count:{{count}}</p>\r\n    <p>numb:{{numb}}</p>\r\n\r\n\r\n    <div class=\"move-around\">\r\n        <div class=\"title\">请选择</div>\r\n        <draggable class=\"list-group\" element=\"ul\" v-model=\"list\" :options=\"dragOptions\"> \r\n            <transition-group type=\"transition\" :name=\"'flip-list'\">\r\n                <li class=\"list-group-item\" v-for=\"element in list\" :key=\"element.order\"> \r\n                  {{element.name}}\r\n                  <span class=\"badge\">{{element.order}}</span>\r\n                </li>\r\n            </transition-group>\r\n        </draggable>\r\n    </div>\r\n\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script> \r\n\r\nimport \"./secondPage.scss\"; \r\nimport {mapState,mapGetters} from 'vuex'  \r\n\r\nimport draggable from 'vuedraggable'\r\nconst message = [ 'vue.draggable', 'draggable', 'component', 'for', 'vue.js 2.0', 'based' , 'on', 'Sortablejs' ]\r\n\r\nexport default {\r\n    data() {\r\n        // console.log(\"---------- data -----------\");\r\n        let self = this; \r\n\r\n        return { \r\n            list: message.map( (name,index) => {return {name, order: index+1}; }), \r\n        }\r\n    },\r\n    props: {\r\n    },\r\n    created() {\r\n        // console.log(\"---------- created -----------\");\r\n    },\r\n    updated() {\r\n        // console.log(\"---------- updated -----------\");\r\n    },\r\n    components: {\r\n        // console.log(\"---------- components -----------\");\r\n        draggable,\r\n    },\r\n\r\n    mounted() {\r\n        // console.log(\"---------- mounted -----------\");\r\n        let self = this;\r\n\r\n    },\r\n\r\n    computed:{\r\n        ...mapGetters({\r\n            numb: \"Gnumb\"\r\n        }),\r\n         ...mapState({\r\n            count: state => state.secondPage.count\r\n        }),\r\n\r\n        dragOptions () {\r\n          return  {\r\n            animation: 0,\r\n            group: 'description',\r\n            disabled: false,\r\n            ghostClass: 'ghost'\r\n          };\r\n        },\r\n    },\r\n\r\n    watch: {},\r\n    methods: {\r\n \r\n        handlePage() {\r\n             this.$router.push('/thirdPage');\r\n        },\r\n        handleButton(){ \r\n            this.$store.dispatch('secondPage/actionA');\r\n        },\r\n        handleNoop() {\r\n            //noop\r\n        },\r\n    },\r\n\r\n}\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/views/secondPage/secondPage.vue?5c10c55c"],"sourceRoot":""}