{"version":3,"sources":["webpack:///static/js/3.17b12bed6b853e365236.js","webpack:///./~/vuedraggable/dist/vuedraggable.js","webpack:///./src/views/secondPage/secondPage.vue","webpack:///./~/sortablejs/Sortable.js","webpack:///./src/views/secondPage/secondPage.scss?1156","webpack:///./src/views/secondPage/secondPage.vue?347e","webpack:///./src/views/secondPage/secondPage.scss","webpack:///src/views/secondPage/secondPage.vue"],"names":["webpackJsonp","DAYN","module","exports","__webpack_require__","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","buildDraggable","Sortable","removeNode","node","parentElement","removeChild","insertNodeAt","fatherNode","position","refNode","children","nextSibling","insertBefore","computeVmIndex","vnodes","element","map","elt","elm","indexOf","_computeIndexes","slots","isTransition","elmFromNodes","rawIndexes","concat","filter","ind","emit","evtName","evtData","_this","this","$nextTick","$emit","toLowerCase","delegateAndEmit","_this2","realList","eventsListened","eventsToEmit","readonlyProperties","evt","draggingElement","name","props","options","list","type","required","default","value","noTransitionOnDrag","Boolean","clone","Function","original","String","move","data","transitionMode","componentMode","render","h","$slots","child","componentOptions","tag","footer","mounted","_this3","$el","nodeName","Error","optionsAdded","forEach","bind","onMove","originalEvent","onDragMove","draggable","_sortable","rootContainer","computeIndexes","beforeDestroy","destroy","computed","isCloning","group","pull","watch","handler","newOptionValue","property","option","deep","methods","getChildrenNodes","$children","rawNodes","_this4","visibleIndexes","getUnderlyingVm","htmlElt","index","getUnderlyingPotencialDraggableComponent","_ref","__vue__","$options","_componentTag","$parent","emitChanges","_this5","alterList","onList","newList","spliceList","_arguments","splice","apply","updatePosition","oldIndex","newIndex","getRelatedContextFromMoveEvent","_ref2","to","related","component","context","destination","getVmIndex","domIndex","indexes","numberIndexes","getComponent","componentInstance","resetTransitionData","transitionContainer","kept","undefined","onDragStart","item","_underlying_vm_","onDragAdd","added","onDragRemove","removed","onDragUpdate","moved","computeFutureIndex","relatedContext","domChildren","el","style","currentDOMIndex","currentIndex","willInsertAfter","draggedContext","futureIndex","onDragEnd","object","slice","DxDx","__webpack_exports__","defineProperty","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_secondPage_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_62b9ec2a_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_lib_selector_type_template_index_0_secondPage_vue__","normalizeComponent","Component","Lokx","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","nodeType","toString","_extend","expando","defaults","Math","random","sort","disabled","store","handle","scroll","scrollSensitivity","scrollSpeed","test","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","animation","setData","dataTransfer","dragEl","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","x","y","_prepareGroup","fn","charAt","nativeDraggable","supportDraggable","_on","_onTapStart","touchDragOverListeners","push","_onDragOver","get","_cloneHide","sortable","state","lastPullMode","cloneEl","_css","revertClone","rootEl","nextEl","_animate","_closest","selector","ctx","document","parentNode","_matches","_getParentOrHost","parent","host","_globalDragOver","dropEffect","preventDefault","event","addEventListener","captureMode","_off","removeEventListener","_toggleClass","classList","className","replace","R_SPACE","prop","val","defaultView","getComputedStyle","currentStyle","_find","tagName","iterator","getElementsByTagName","n","_dispatchEvent","targetEl","fromEl","startIndex","createEvent","onName","toUpperCase","substr","initEvent","dispatchEvent","_onMove","toEl","dragRect","targetRect","originalEvt","retVal","onMoveFn","dragged","draggedRect","relatedRect","getBoundingClientRect","_disableDraggable","_unsilent","_silent","_ghostIsLast","lastEl","lastElementChild","rect","clientY","top","height","clientX","left","width","_generateId","str","src","href","sum","charCodeAt","_index","previousElementSibling","split","shift","re","RegExp","join","match","_throttle","callback","ms","args","setTimeout","dst","_clone","$","Polymer","dom","cloneNode","_saveInputCheckedState","root","inputs","idx","checked","savedInputChecked","window","parentEl","ghostEl","lastDownEl","scrollEl","scrollParentEl","scrollCustomFn","lastCSS","lastParentCSS","activeGroup","putSortable","tapEvt","touchEvt","autoScroll","R_FLOAT","Date","getTime","win","parseInt","jQuery","Zepto","createElement","supportCssPointerEvents","navigator","userAgent","cssText","pointerEvents","abs","min","_autoScroll","vx","vy","scrollOffsetX","scrollOffsetY","sens","speed","winWidth","innerWidth","winHeight","innerHeight","scrollFn","offsetWidth","scrollWidth","offsetHeight","scrollHeight","right","bottom","clearInterval","pid","setInterval","scrollTo","pageXOffset","pageYOffset","scrollTop","scrollLeft","toFn","fromGroup","originalGroup","checkPull","checkPut","put","constructor","touch","touches","originalTarget","shadowRoot","path","button","some","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","_lastX","_lastY","_disableDelayedDrag","_triggerDragStart","_onDrop","_dragStartTimer","clearTimeout","pointerType","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","active","_nulling","_emulateDragOver","elementFromPoint","_onTouchMove","dx","dy","translate3d","_appendGhost","ghostRect","css","marginTop","marginLeft","body","appendChild","useFallback","_offUpEvents","_loopId","effectAllowed","revert","activeSortable","isOwner","isMovingBetweenSortable","canSort","stopPropagation","animated","contains","floating","cssFloat","display","isWide","isLong","halfway","nextElementSibling","after","elTop","offsetTop","tgTop","moveVector","prevRect","currentRect","save","handleEvent","toArray","order","getAttribute","items","id","set","closest","querySelectorAll","removeAttribute","capture","passive","utils","on","off","find","is","extend","throttle","toggleClass","create","version","RdRw","content","locals","StRg","_vm","_h","$createElement","_c","_self","staticClass","click","$event","handlePage","_v","handleButton","_s","count","numb","attrs","dragOptions","model","$$v","expression","_l","staticRenderFns","esExports","YJ15","sources","names","mappings","file","sourcesContent","sourceRoot","giW7","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default","__WEBPACK_IMPORTED_MODULE_1__secondPage_scss__","__WEBPACK_IMPORTED_MODULE_2_vuex__","__WEBPACK_IMPORTED_MODULE_3_vuedraggable__","__WEBPACK_IMPORTED_MODULE_3_vuedraggable___default","message","created","updated","components","a","secondPage","$router","$store","dispatch","handleNoop"],"mappings":"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","file":"static/js/3.17b12bed6b853e365236.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ \"DAYN\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n(function () {\n  \"use strict\";\n\n  if (!Array.from) {\n    Array.from = function (object) {\n      return [].slice.call(object);\n    };\n  }\n\n  function buildDraggable(Sortable) {\n    function removeNode(node) {\n      node.parentElement.removeChild(node);\n    }\n\n    function insertNodeAt(fatherNode, node, position) {\n      var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;\n      fatherNode.insertBefore(node, refNode);\n    }\n\n    function computeVmIndex(vnodes, element) {\n      return vnodes.map(function (elt) {\n        return elt.elm;\n      }).indexOf(element);\n    }\n\n    function _computeIndexes(slots, children, isTransition) {\n      if (!slots) {\n        return [];\n      }\n\n      var elmFromNodes = slots.map(function (elt) {\n        return elt.elm;\n      });\n      var rawIndexes = [].concat(_toConsumableArray(children)).map(function (elt) {\n        return elmFromNodes.indexOf(elt);\n      });\n      return isTransition ? rawIndexes.filter(function (ind) {\n        return ind !== -1;\n      }) : rawIndexes;\n    }\n\n    function emit(evtName, evtData) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        return _this.$emit(evtName.toLowerCase(), evtData);\n      });\n    }\n\n    function delegateAndEmit(evtName) {\n      var _this2 = this;\n\n      return function (evtData) {\n        if (_this2.realList !== null) {\n          _this2['onDrag' + evtName](evtData);\n        }\n        emit.call(_this2, evtName, evtData);\n      };\n    }\n\n    var eventsListened = ['Start', 'Add', 'Remove', 'Update', 'End'];\n    var eventsToEmit = ['Choose', 'Sort', 'Filter', 'Clone'];\n    var readonlyProperties = ['Move'].concat(eventsListened, eventsToEmit).map(function (evt) {\n      return 'on' + evt;\n    });\n    var draggingElement = null;\n\n    var props = {\n      options: Object,\n      list: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      value: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      noTransitionOnDrag: {\n        type: Boolean,\n        default: false\n      },\n      clone: {\n        type: Function,\n        default: function _default(original) {\n          return original;\n        }\n      },\n      element: {\n        type: String,\n        default: 'div'\n      },\n      move: {\n        type: Function,\n        default: null\n      }\n    };\n\n    var draggableComponent = {\n      name: 'draggable',\n\n      props: props,\n\n      data: function data() {\n        return {\n          transitionMode: false,\n          componentMode: false\n        };\n      },\n      render: function render(h) {\n        var slots = this.$slots.default;\n        if (slots && slots.length === 1) {\n          var child = slots[0];\n          if (child.componentOptions && child.componentOptions.tag === \"transition-group\") {\n            this.transitionMode = true;\n          }\n        }\n        var children = slots;\n        var footer = this.$slots.footer;\n\n        if (footer) {\n          children = slots ? [].concat(_toConsumableArray(slots), _toConsumableArray(footer)) : [].concat(_toConsumableArray(footer));\n        }\n        return h(this.element, null, children);\n      },\n      mounted: function mounted() {\n        var _this3 = this;\n\n        this.componentMode = this.element.toLowerCase() !== this.$el.nodeName.toLowerCase();\n        if (this.componentMode && this.transitionMode) {\n          throw new Error('Transition-group inside component is not supported. Please alter element value or remove transition-group. Current element value: ' + this.element);\n        }\n        var optionsAdded = {};\n        eventsListened.forEach(function (elt) {\n          optionsAdded['on' + elt] = delegateAndEmit.call(_this3, elt);\n        });\n\n        eventsToEmit.forEach(function (elt) {\n          optionsAdded['on' + elt] = emit.bind(_this3, elt);\n        });\n\n        var options = _extends({}, this.options, optionsAdded, { onMove: function onMove(evt, originalEvent) {\n            return _this3.onDragMove(evt, originalEvent);\n          } });\n        !('draggable' in options) && (options.draggable = '>*');\n        this._sortable = new Sortable(this.rootContainer, options);\n        this.computeIndexes();\n      },\n      beforeDestroy: function beforeDestroy() {\n        this._sortable.destroy();\n      },\n\n\n      computed: {\n        rootContainer: function rootContainer() {\n          return this.transitionMode ? this.$el.children[0] : this.$el;\n        },\n        isCloning: function isCloning() {\n          return !!this.options && !!this.options.group && this.options.group.pull === 'clone';\n        },\n        realList: function realList() {\n          return !!this.list ? this.list : this.value;\n        }\n      },\n\n      watch: {\n        options: {\n          handler: function handler(newOptionValue) {\n            for (var property in newOptionValue) {\n              if (readonlyProperties.indexOf(property) == -1) {\n                this._sortable.option(property, newOptionValue[property]);\n              }\n            }\n          },\n\n          deep: true\n        },\n\n        realList: function realList() {\n          this.computeIndexes();\n        }\n      },\n\n      methods: {\n        getChildrenNodes: function getChildrenNodes() {\n          if (this.componentMode) {\n            return this.$children[0].$slots.default;\n          }\n          var rawNodes = this.$slots.default;\n          return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;\n        },\n        computeIndexes: function computeIndexes() {\n          var _this4 = this;\n\n          this.$nextTick(function () {\n            _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children, _this4.transitionMode);\n          });\n        },\n        getUnderlyingVm: function getUnderlyingVm(htmlElt) {\n          var index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);\n          if (index === -1) {\n            //Edge case during move callback: related element might be\n            //an element different from collection\n            return null;\n          }\n          var element = this.realList[index];\n          return { index: index, element: element };\n        },\n        getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref) {\n          var __vue__ = _ref.__vue__;\n\n          if (!__vue__ || !__vue__.$options || __vue__.$options._componentTag !== \"transition-group\") {\n            return __vue__;\n          }\n          return __vue__.$parent;\n        },\n        emitChanges: function emitChanges(evt) {\n          var _this5 = this;\n\n          this.$nextTick(function () {\n            _this5.$emit('change', evt);\n          });\n        },\n        alterList: function alterList(onList) {\n          if (!!this.list) {\n            onList(this.list);\n          } else {\n            var newList = [].concat(_toConsumableArray(this.value));\n            onList(newList);\n            this.$emit('input', newList);\n          }\n        },\n        spliceList: function spliceList() {\n          var _arguments = arguments;\n\n          var spliceList = function spliceList(list) {\n            return list.splice.apply(list, _arguments);\n          };\n          this.alterList(spliceList);\n        },\n        updatePosition: function updatePosition(oldIndex, newIndex) {\n          var updatePosition = function updatePosition(list) {\n            return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\n          };\n          this.alterList(updatePosition);\n        },\n        getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref2) {\n          var to = _ref2.to,\n              related = _ref2.related;\n\n          var component = this.getUnderlyingPotencialDraggableComponent(to);\n          if (!component) {\n            return { component: component };\n          }\n          var list = component.realList;\n          var context = { list: list, component: component };\n          if (to !== related && list && component.getUnderlyingVm) {\n            var destination = component.getUnderlyingVm(related);\n            if (destination) {\n              return _extends(destination, context);\n            }\n          }\n\n          return context;\n        },\n        getVmIndex: function getVmIndex(domIndex) {\n          var indexes = this.visibleIndexes;\n          var numberIndexes = indexes.length;\n          return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];\n        },\n        getComponent: function getComponent() {\n          return this.$slots.default[0].componentInstance;\n        },\n        resetTransitionData: function resetTransitionData(index) {\n          if (!this.noTransitionOnDrag || !this.transitionMode) {\n            return;\n          }\n          var nodes = this.getChildrenNodes();\n          nodes[index].data = null;\n          var transitionContainer = this.getComponent();\n          transitionContainer.children = [];\n          transitionContainer.kept = undefined;\n        },\n        onDragStart: function onDragStart(evt) {\n          this.context = this.getUnderlyingVm(evt.item);\n          evt.item._underlying_vm_ = this.clone(this.context.element);\n          draggingElement = evt.item;\n        },\n        onDragAdd: function onDragAdd(evt) {\n          var element = evt.item._underlying_vm_;\n          if (element === undefined) {\n            return;\n          }\n          removeNode(evt.item);\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.spliceList(newIndex, 0, element);\n          this.computeIndexes();\n          var added = { element: element, newIndex: newIndex };\n          this.emitChanges({ added: added });\n        },\n        onDragRemove: function onDragRemove(evt) {\n          insertNodeAt(this.rootContainer, evt.item, evt.oldIndex);\n          if (this.isCloning) {\n            removeNode(evt.clone);\n            return;\n          }\n          var oldIndex = this.context.index;\n          this.spliceList(oldIndex, 1);\n          var removed = { element: this.context.element, oldIndex: oldIndex };\n          this.resetTransitionData(oldIndex);\n          this.emitChanges({ removed: removed });\n        },\n        onDragUpdate: function onDragUpdate(evt) {\n          removeNode(evt.item);\n          insertNodeAt(evt.from, evt.item, evt.oldIndex);\n          var oldIndex = this.context.index;\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.updatePosition(oldIndex, newIndex);\n          var moved = { element: this.context.element, oldIndex: oldIndex, newIndex: newIndex };\n          this.emitChanges({ moved: moved });\n        },\n        computeFutureIndex: function computeFutureIndex(relatedContext, evt) {\n          if (!relatedContext.element) {\n            return 0;\n          }\n          var domChildren = [].concat(_toConsumableArray(evt.to.children)).filter(function (el) {\n            return el.style['display'] !== 'none';\n          });\n          var currentDOMIndex = domChildren.indexOf(evt.related);\n          var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);\n          var draggedInList = domChildren.indexOf(draggingElement) != -1;\n          return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;\n        },\n        onDragMove: function onDragMove(evt, originalEvent) {\n          var onMove = this.move;\n          if (!onMove || !this.realList) {\n            return true;\n          }\n\n          var relatedContext = this.getRelatedContextFromMoveEvent(evt);\n          var draggedContext = this.context;\n          var futureIndex = this.computeFutureIndex(relatedContext, evt);\n          _extends(draggedContext, { futureIndex: futureIndex });\n          _extends(evt, { relatedContext: relatedContext, draggedContext: draggedContext });\n          return onMove(evt, originalEvent);\n        },\n        onDragEnd: function onDragEnd(evt) {\n          this.computeIndexes();\n          draggingElement = null;\n        }\n      }\n    };\n    return draggableComponent;\n  }\n\n  if (true) {\n    var Sortable = __webpack_require__(\"Lokx\");\n    module.exports = buildDraggable(Sortable);\n  } else if (typeof define == \"function\" && define.amd) {\n    define(['sortablejs'], function (Sortable) {\n      return buildDraggable(Sortable);\n    });\n  } else if (window && window.Vue && window.Sortable) {\n    var draggable = buildDraggable(window.Sortable);\n    Vue.component('draggable', draggable);\n  }\n})();\n\n/***/ }),\n\n/***/ \"DxDx\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_secondPage_vue__ = __webpack_require__(\"giW7\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_62b9ec2a_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_lib_selector_type_template_index_0_secondPage_vue__ = __webpack_require__(\"StRg\");\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_secondPage_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_62b9ec2a_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_node_modules_vue_loader_lib_selector_type_template_index_0_secondPage_vue__[\"a\" /* default */],\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"Lokx\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @license MIT\n */\n\n(function sortableModule(factory) {\n\t\"use strict\";\n\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n\t\tmodule.exports = factory();\n\t}\n\telse {\n\t\t/* jshint sub:true */\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function sortableFactory() {\n\t\"use strict\";\n\n\tif (typeof window == \"undefined\" || !window.document) {\n\t\treturn function sortableError() {\n\t\t\tthrow new Error(\"Sortable.js requires a window with a document\");\n\t\t};\n\t}\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\tlastEl,\n\t\tlastCSS,\n\t\tlastParentCSS,\n\n\t\toldIndex,\n\t\tnewIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScroll = {},\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\t\tR_FLOAT = /left|right|inline/,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\n\t\t$ = win.jQuery || win.Zepto,\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = false,\n\n\t\tsupportDraggable = !!('draggable' in document.createElement('div')),\n\t\tsupportCssPointerEvents = (function (el) {\n\t\t\t// false when IE11\n\t\t\tif (!!navigator.userAgent.match(/Trident.*rv[ :]?11\\./)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tel = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\n\t\tsavedInputChecked = [],\n\t\ttouchDragOverListeners = [],\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (rootEl && options.scroll) {\n\t\t\t\tvar _this = rootEl[expando],\n\t\t\t\t\tel,\n\t\t\t\t\trect,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinWidth = window.innerWidth,\n\t\t\t\t\twinHeight = window.innerHeight,\n\n\t\t\t\t\tvx,\n\t\t\t\t\tvy,\n\n\t\t\t\t\tscrollOffsetX,\n\t\t\t\t\tscrollOffsetY\n\t\t\t\t;\n\n\t\t\t\t// Delect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollParentEl = rootEl;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = rootEl;\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif ((scrollEl.offsetWidth < scrollEl.scrollWidth) ||\n\t\t\t\t\t\t\t\t(scrollEl.offsetHeight < scrollEl.scrollHeight)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\t\t} while (scrollEl = scrollEl.parentNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (scrollEl) {\n\t\t\t\t\tel = scrollEl;\n\t\t\t\t\trect = scrollEl.getBoundingClientRect();\n\t\t\t\t\tvx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);\n\t\t\t\t\tvy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);\n\t\t\t\t}\n\n\n\t\t\t\tif (!(vx || vy)) {\n\t\t\t\t\tvx = (winWidth - x <= sens) - (x <= sens);\n\t\t\t\t\tvy = (winHeight - y <= sens) - (y <= sens);\n\n\t\t\t\t\t/* jshint expr:true */\n\t\t\t\t\t(vx || vy) && (el = win);\n\t\t\t\t}\n\n\n\t\t\t\tif (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {\n\t\t\t\t\tautoScroll.el = el;\n\t\t\t\t\tautoScroll.vx = vx;\n\t\t\t\t\tautoScroll.vy = vy;\n\n\t\t\t\t\tclearInterval(autoScroll.pid);\n\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tautoScroll.pid = setInterval(function () {\n\t\t\t\t\t\t\tscrollOffsetY = vy ? vy * speed : 0;\n\t\t\t\t\t\t\tscrollOffsetX = vx ? vx * speed : 0;\n\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\treturn scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (el === win) {\n\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tel.scrollTop += scrollOffsetY;\n\t\t\t\t\t\t\t\tel.scrollLeft += scrollOffsetX;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 24);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 30),\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\tif (value === void 0 || value === true) {\n\t\t\t\t\tvalue = group.name;\n\t\t\t\t}\n\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn function (to, from) {\n\t\t\t\t\t\tvar fromGroup = from.options.group.name;\n\n\t\t\t\t\t\treturn pull\n\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t: value && (value.join\n\t\t\t\t\t\t\t\t? value.indexOf(fromGroup) > -1\n\t\t\t\t\t\t\t\t: (fromGroup == value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t}\n\t;\n\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: Math.random(),\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0}\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t// Bind events\n\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t_on(el, 'touchstart', this._onTapStart);\n\t\t_on(el, 'pointerdown', this._onTapStart);\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\ttouchDragOverListeners.push(this._onDragOver);\n\n\t\t// Restore sorting\n\t\toptions.store && this.sort(options.store.get(this));\n\t}\n\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && (evt.path && evt.path[0]) || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button or enabled\n\t\t\t}\n\n\n\t\t\ttarget = _closest(target, options.draggable, el);\n\n\t\t\tif (!target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, startIndex);\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, startIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\ttapEvt = evt;\n\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'transform';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDrag();\n\n\t\t\t\t\t// Make the element draggable\n\t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, oldIndex);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'pointercancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'selectstart', _this);\n\n\t\t\t\tif (options.delay) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'pointermove', _this._disableDelayedDrag);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchmove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'pointermove', this._disableDelayedDrag);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n\t\t\tif (touch) {\n\t\t\t\t// Touch device support\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\tclientY: touch.clientY\n\t\t\t\t};\n\n\t\t\t\tthis._onDragStart(tapEvt, 'touch');\n\t\t\t}\n\t\t\telse if (!this.nativeDraggable) {\n\t\t\t\tthis._onDragStart(tapEvt, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function () {\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t_toggleClass(dragEl, options.dragClass, false);\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, oldIndex);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function () {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t\t}\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),\n\t\t\t\t\tparent = target,\n\t\t\t\t\ti = touchDragOverListeners.length;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\ttouchDragOverListeners[i]({\n\t\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tdx = (touch.clientX - tapEvt.clientX) + fallbackOffset.x,\n\t\t\t\t\tdy = (touch.clientY - tapEvt.clientY) + fallbackOffset.y,\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._dragStarted();\n\t\t\t\t}\n\n\t\t\t\t// as well as creating the ghost element on the document body\n\t\t\t\tthis._appendGhost();\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar rect = dragEl.getBoundingClientRect(),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options,\n\t\t\t\t\tghostRect;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\n\t\t\t\t_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\n\n\t\t\t\t// Fixing dimensions.\n\t\t\t\tghostRect = ghostEl.getBoundingClientRect();\n\t\t\t\t_css(ghostEl, 'width', rect.width * 2 - ghostRect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height * 2 - ghostRect.height);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/useFallback) {\n\t\t\tvar dataTransfer = evt.dataTransfer,\n\t\t\t\toptions = this.options;\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (activeGroup.checkPull(this, this, dragEl, evt)) {\n\t\t\t\tcloneEl = _clone(dragEl);\n\n\t\t\t\tcloneEl.draggable = false;\n\t\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\t_toggleClass(cloneEl, this.options.chosenClass, false);\n\n\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t_dispatchEvent(this, rootEl, 'clone', dragEl);\n\t\t\t}\n\n\t\t\t_toggleClass(dragEl, options.dragClass, true);\n\n\t\t\tif (useFallback) {\n\t\t\t\tif (useFallback === 'touch') {\n\t\t\t\t\t// Bind touch events\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'touchend', this._onDrop);\n\t\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'pointerup', this._onDrop);\n\t\t\t\t} else {\n\t\t\t\t\t// Old brwoser\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'mouseup', this._onDrop);\n\t\t\t\t}\n\n\t\t\t\tthis._loopId = setInterval(this._emulateDragOver, 50);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', this);\n\t\t\t\tsetTimeout(this._dragStarted, 0);\n\t\t\t}\n\t\t},\n\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tisMovingBetweenSortable = false,\n\t\t\t\tcanSort = options.sort;\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.preventDefault();\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation();\n\t\t\t}\n\n\t\t\tif (dragEl.animated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmoved = true;\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(activeSortable.lastPullMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) &&\n\t\t\t\t(evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback\n\t\t\t) {\n\t\t\t\t// Smart auto-scrolling\n\t\t\t\t_autoScroll(evt, options, this.el);\n\n\t\t\t\tif (_silent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttarget = _closest(evt.target, options.draggable, el);\n\t\t\t\tdragRect = dragEl.getBoundingClientRect();\n\n\t\t\t\tif (putSortable !== this) {\n\t\t\t\t\tputSortable = this;\n\t\t\t\t\tisMovingBetweenSortable = true;\n\t\t\t\t}\n\n\t\t\t\tif (revert) {\n\t\t\t\t\t_cloneHide(activeSortable, true);\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (cloneEl || nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, cloneEl || nextEl);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!canSort) {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n\t\t\t\t\t(el === evt.target) && (_ghostIsLast(el, evt))\n\t\t\t\t) {\n\t\t\t\t\t//assign target only if condition is true\n\t\t\t\t\tif (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {\n\t\t\t\t\t\ttarget = el.lastElementChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tif (target.animated) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\t\t\t\t\t}\n\n\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt) !== false) {\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && !target.animated && target !== dragEl && (target.parentNode[expando] !== void 0)) {\n\t\t\t\t\tif (lastEl !== target) {\n\t\t\t\t\t\tlastEl = target;\n\t\t\t\t\t\tlastCSS = _css(target);\n\t\t\t\t\t\tlastParentCSS = _css(target.parentNode);\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\n\t\t\t\t\tvar width = targetRect.right - targetRect.left,\n\t\t\t\t\t\theight = targetRect.bottom - targetRect.top,\n\t\t\t\t\t\tfloating = R_FLOAT.test(lastCSS.cssFloat + lastCSS.display)\n\t\t\t\t\t\t\t|| (lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].indexOf('row') === 0),\n\t\t\t\t\t\tisWide = (target.offsetWidth > dragEl.offsetWidth),\n\t\t\t\t\t\tisLong = (target.offsetHeight > dragEl.offsetHeight),\n\t\t\t\t\t\thalfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY - targetRect.top) / height) > 0.5,\n\t\t\t\t\t\tnextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false\n\t\t\t\t\t;\n\n\t\t\t\t\tif (floating) {\n\t\t\t\t\t\tvar elTop = dragEl.offsetTop,\n\t\t\t\t\t\t\ttgTop = target.offsetTop;\n\n\t\t\t\t\t\tif (elTop === tgTop) {\n\t\t\t\t\t\t\tafter = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.previousElementSibling === dragEl || dragEl.previousElementSibling === target) {\n\t\t\t\t\t\t\tafter = (evt.clientY - targetRect.top) / height > 0.5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tafter = tgTop > elTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!isMovingBetweenSortable) {\n\t\t\t\t\t\tafter = (nextSibling !== dragEl) && !isLong || halfway && isLong;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\tthis._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = target.getBoundingClientRect();\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = prevRect.getBoundingClientRect();\n\t\t\t\t}\n\n\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t+ (prevRect.left - currentRect.left) + 'px,'\n\t\t\t\t\t+ (prevRect.top - currentRect.top) + 'px,0)'\n\t\t\t\t);\n\n\t\t\t\ttarget.offsetWidth; // repaint\n\n\t\t\t\t_css(target, 'transition', 'all ' + ms + 'ms');\n\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\n\t\t\t\tclearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointercancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\n\t\t\tclearInterval(this._loopId);\n\t\t\tclearInterval(autoScroll.pid);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || Sortable.active.lastPullMode !== 'clone') {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, rootEl, oldIndex);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\n\t\t\tlastEl =\n\t\t\tlastCSS =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragover':\n\t\t\t\tcase 'dragenter':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\ttouchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\n\n\t\t\tthis._onDrop();\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t};\n\n\n\tfunction _cloneHide(sortable, state) {\n\t\tif (sortable.lastPullMode !== 'clone') {\n\t\t\tstate = true;\n\t\t}\n\n\t\tif (cloneEl && (cloneEl.state !== state)) {\n\t\t\t_css(cloneEl, 'display', state ? 'none' : '');\n\n\t\t\tif (!state) {\n\t\t\t\tif (cloneEl.state) {\n\t\t\t\t\tif (sortable.options.group.revertClone) {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t\t\tsortable._animate(dragEl, cloneEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcloneEl.state = state;\n\t\t}\n\t}\n\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\n\t\t\tdo {\n\t\t\t\tif ((selector === '>*' && el.parentNode === ctx) || _matches(el, selector)) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\t/* jshint boss:true */\n\t\t\t} while (el = _getParentOrHost(el));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _getParentOrHost(el) {\n\t\tvar parent = el.host;\n\n\t\treturn (parent && parent.nodeType) ? parent : el.parentNode;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style)) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) {\n\t\tsortable = (sortable || rootEl[expando]);\n\n\t\tvar evt = document.createEvent('Event'),\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\n\t\tevt.initEvent(name, true, true);\n\n\t\tevt.to = rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\trootEl.dispatchEvent(evt);\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\n\t\tevt = document.createEvent('Event');\n\t\tevt.initEvent('move', true, true);\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || toEl.getBoundingClientRect();\n\t\tevt.willInsertAfter = willInsertAfter;\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\t/** @returns {HTMLElement|false} */\n\tfunction _ghostIsLast(el, evt) {\n\t\tvar lastEl = el.lastElementChild,\n\t\t\trect = lastEl.getBoundingClientRect();\n\n\t\t// 5 — min delta\n\t\t// abs — нельзя добавлять, а то глюки при наведении сверху\n\t\treturn (evt.clientY - (rect.top + rect.height) > 5) ||\n\t\t\t(evt.clientX - (rect.left + rect.width) > 5);\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && (selector === '>*' || _matches(el, selector))) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n\t\tif (el) {\n\t\t\tselector = selector.split('.');\n\n\t\t\tvar tag = selector.shift().toUpperCase(),\n\t\t\t\tre = new RegExp('\\\\s(' + selector.join('|') + ')(?=\\\\s)', 'g');\n\n\t\t\treturn (\n\t\t\t\t(tag === '' || el.nodeName.toUpperCase() == tag) &&\n\t\t\t\t(!selector.length || ((' ' + el.className + ' ').match(re) || []).length == selector.length)\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction _throttle(callback, ms) {\n\t\tvar args, _this;\n\n\t\treturn function () {\n\t\t\tif (args === void 0) {\n\t\t\t\targs = arguments;\n\t\t\t\t_this = this;\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\targs = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tfunction _clone(el) {\n\t\treturn $\n\t\t\t? $(el).clone(true)[0]\n\t\t\t: (Polymer && Polymer.dom\n\t\t\t\t? Polymer.dom(el).cloneNode(true)\n\t\t\t\t: el.cloneNode(true)\n\t\t\t);\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\t// Fixed #973: \n\t_on(document, 'touchmove', function (evt) {\n\t\tif (Sortable.active) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\ttry {\n\t\twindow.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n\t\t\tget: function () {\n\t\t\t\tcaptureMode = {\n\t\t\t\t\tcapture: false,\n\t\t\t\t\tpassive: false\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t} catch (err) {}\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tclone: _clone,\n\t\tindex: _index\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.6.1';\n\treturn Sortable;\n});\n\n\n/***/ }),\n\n/***/ \"RdRw\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"YJ15\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"1475f1d2\", content, true);\n\n/***/ }),\n\n/***/ \"StRg\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"secondPage\"\n  }, [_c('p', {\n    staticClass: \"title\",\n    on: {\n      \"click\": function($event) {\n        _vm.handlePage()\n      }\n    }\n  }, [_vm._v(\"secondPage\")]), _vm._v(\" \"), _c('p', [_vm._v(\"第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"button\",\n    on: {\n      \"click\": function($event) {\n        _vm.handleButton()\n      }\n    }\n  }, [_vm._v(\"dian\")]), _vm._v(\" \"), _c('p', [_vm._v(\"count:\" + _vm._s(_vm.count))]), _vm._v(\" \"), _c('p', [_vm._v(\"numb:\" + _vm._s(_vm.numb))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"move-around\"\n  }, [_c('div', {\n    staticClass: \"title\"\n  }, [_vm._v(\"请选择\")]), _vm._v(\" \"), _c('draggable', {\n    staticClass: \"list-group\",\n    attrs: {\n      \"element\": \"ul\",\n      \"options\": _vm.dragOptions\n    },\n    model: {\n      value: (_vm.list),\n      callback: function($$v) {\n        _vm.list = $$v\n      },\n      expression: \"list\"\n    }\n  }, [_c('transition-group', {\n    attrs: {\n      \"type\": \"transition\",\n      \"name\": 'flip-list'\n    }\n  }, _vm._l((_vm.list), function(element) {\n    return _c('li', {\n      key: element.order,\n      staticClass: \"list-group-item\"\n    }, [_vm._v(\" \\n                \" + _vm._s(element.name) + \"\\n                \"), _c('span', {\n      staticClass: \"badge\"\n    }, [_vm._v(_vm._s(element.order))])])\n  }))], 1)], 1)])\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"YJ15\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".secondPage{background-color:green;width:10rem;height:100%;font-size:16px}[data-dpr=\\\"2\\\"] .secondPage{font-size:32px}[data-dpr=\\\"3\\\"] .secondPage{font-size:48px}.secondPage .title{background-color:red;width:10rem;height:1.33333rem}.secondPage .button{width:2.66667rem;height:1.33333rem}.secondPage .move-around{position:absolute;width:100%;left:0;bottom:0}.secondPage .move-around .list-group{width:100%;min-height:20px}.secondPage .move-around .list-group .list-group-item{position:relative;width:100%;height:50px;background-color:#fff}.secondPage .move-around .list-group .list-group-item .badge{position:absolute;right:0;top:0}\", \"\", {\"version\":3,\"sources\":[\"D:/EastWork/creditloan/src/views/secondPage/src/views/secondPage/secondPage.scss\",\"D:/EastWork/creditloan/src/views/secondPage/src/assets/css/_mixin.scss\",\"D:/EastWork/creditloan/src/views/secondPage/secondPage.scss\"],\"names\":[],\"mappings\":\"AAEA,YACC,uBAAuB,ACetB,YAAwC,ADZzC,YAAW,ACLX,cDMsB,CAqCtB,AEvCC,2BDFA,cAAyB,CACzB,ACGA,2BDDA,cAAyB,CACzB,ADLF,mBAQE,qBAAqB,ACQrB,YAAwC,AAAxC,iBAAwC,CDLxC,AAXF,oBCgBE,iBAAwC,AAAxC,iBAAwC,CDDxC,AAfF,yBAkBE,kBAAkB,AAClB,WAAW,AACX,OAAM,AACN,QAAS,CAmBT,AAxCF,qCAwBG,WAAW,AACX,eAAgB,CAchB,AAvCH,sDA4BI,kBAAkB,AAClB,WAAW,AACX,YAAY,AACZ,qBAAsB,CAOtB,AAtCJ,6DAkCK,kBAAkB,AAClB,QAAQ,AACR,KAAM,CACN\",\"file\":\"secondPage.scss\",\"sourcesContent\":[\"@import \\\"../../assets/css/_mixin.scss\\\";\\r\\n\\r\\n.secondPage{\\r\\n\\tbackground-color: green;\\r\\n\\r\\n\\t@include px2rem(width, 750px);\\r\\n\\theight:100%; \\r\\n\\t@include font-dpr(16px);\\r\\n\\r\\n\\t.title{\\r\\n\\t\\tbackground-color: red;\\r\\n\\t\\t@include px2rem(width, 750px);\\r\\n\\t\\t@include px2rem(height, 100px);\\r\\n\\t}\\r\\n\\t.button{ \\r\\n\\t\\t@include px2rem(width, 200px);\\r\\n\\t\\t@include px2rem(height, 100px);\\r\\n\\t}\\r\\n\\r\\n\\t.move-around{\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\tleft:0;\\r\\n\\t\\tbottom: 0;\\r\\n\\r\\n\\t\\t.list-group {\\r\\n\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\tmin-height: 20px;\\r\\n\\t\\t\\t.list-group-item {\\r\\n\\r\\n\\t\\t\\t\\tposition: relative;\\r\\n\\t\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\t\\theight: 50px;\\r\\n\\t\\t\\t\\tbackground-color: #fff;\\r\\n\\r\\n\\t\\t\\t\\t.badge{\\r\\n\\t\\t\\t\\t\\tposition: absolute;\\r\\n\\t\\t\\t\\t\\tright: 0;\\r\\n\\t\\t\\t\\t\\ttop: 0; \\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n \\r\\n}\",\"@mixin font-dpr($font-size){ \\n\\tfont-size: $font-size; \\n\\t[data-dpr=\\\"2\\\"] & { \\n\\t\\tfont-size: $font-size * 2; \\n\\t}\\n\\t[data-dpr=\\\"3\\\"] & {\\n\\t\\tfont-size: $font-size * 3; \\n\\t} \\n}\\n@mixin px2rem($property,$px-values,$baseline-px:75px,$support-for-ie:false){ \\n\\t//Conver the baseline into rems \\n\\t$baseline-rem: $baseline-px / 1rem * 1; \\n\\t//Print the first line in pixel values \\n\\t@if $support-for-ie { \\n\\t\\t#{$property}: $px-values; \\n\\t} \\n\\t//if there is only one (numeric) value, return the property/value line for it. \\n\\t@if type-of($px-values) == \\\"number\\\"{ \\n\\t\\t#{$property}: $px-values / $baseline-rem; \\n\\t} @else {\\n\\t\\t//Create an empty list that we can dump values into \\n\\t\\t$rem-values:(); \\n\\t\\t@each $value in $px-values{ \\n\\t\\t// If the value is zero or not a number, return it \\n\\t\\t\\t@if $value == 0 or type-of($value) == \\\"number\\\"{ \\n\\t\\t\\t\\t$rem-values: append($rem-values, $value / $baseline-rem); \\n\\t\\t\\t} \\n\\t\\t} \\n\\t\\t// Return the property and its list of converted values \\n\\t\\t#{$property}: $rem-values; \\n\\t} \\n}\\n\\n$component-pic-url:\\\"../../assets/images/\\\";\\n$view-pic-url:\\\"../../assets/images/\\\";\\n\",\".secondPage {\\n  background-color: green;\\n  width: 10rem;\\n  height: 100%;\\n  font-size: 16px; }\\n  [data-dpr=\\\"2\\\"] .secondPage {\\n    font-size: 32px; }\\n  [data-dpr=\\\"3\\\"] .secondPage {\\n    font-size: 48px; }\\n  .secondPage .title {\\n    background-color: red;\\n    width: 10rem;\\n    height: 1.33333rem; }\\n  .secondPage .button {\\n    width: 2.66667rem;\\n    height: 1.33333rem; }\\n  .secondPage .move-around {\\n    position: absolute;\\n    width: 100%;\\n    left: 0;\\n    bottom: 0; }\\n    .secondPage .move-around .list-group {\\n      width: 100%;\\n      min-height: 20px; }\\n      .secondPage .move-around .list-group .list-group-item {\\n        position: relative;\\n        width: 100%;\\n        height: 50px;\\n        background-color: #fff; }\\n        .secondPage .move-around .list-group .list-group-item .badge {\\n          position: absolute;\\n          right: 0;\\n          top: 0; }\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"giW7\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__ = __webpack_require__(\"Dd8w\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__secondPage_scss__ = __webpack_require__(\"RdRw\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__secondPage_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__secondPage_scss__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vuex__ = __webpack_require__(\"NYxO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vuedraggable__ = __webpack_require__(\"DAYN\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vuedraggable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_vuedraggable__);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\nvar message = ['vue.draggable', 'draggable', 'component', 'for', 'vue.js 2.0', 'based', 'on', 'Sortablejs'];\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    data: function data() {\n        // console.log(\"---------- data -----------\");\n        var self = this;\n\n        return {\n            list: message.map(function (name, index) {\n                return { name: name, order: index + 1 };\n            })\n        };\n    },\n\n    props: {},\n    created: function created() {\n        // console.log(\"---------- created -----------\");\n    },\n    updated: function updated() {\n        // console.log(\"---------- updated -----------\");\n    },\n\n    components: {\n        // console.log(\"---------- components -----------\");\n        draggable: __WEBPACK_IMPORTED_MODULE_3_vuedraggable___default.a\n    },\n\n    mounted: function mounted() {\n        // console.log(\"---------- mounted -----------\");\n        var self = this;\n    },\n\n\n    computed: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"b\" /* mapGetters */])({\n        numb: \"Gnumb\"\n    }), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_vuex__[\"a\" /* mapState */])({\n        count: function count(state) {\n            return state.secondPage.count;\n        }\n    }), {\n        dragOptions: function dragOptions() {\n            return {\n                animation: 0,\n                group: 'description',\n                disabled: false,\n                ghostClass: 'ghost'\n            };\n        }\n    }),\n\n    watch: {},\n    methods: {\n        handlePage: function handlePage() {\n            this.$router.push('/thirdPage');\n        },\n        handleButton: function handleButton() {\n            this.$store.dispatch('secondPage/actionA');\n        },\n        handleNoop: function handleNoop() {\n            //noop\n        }\n    }\n\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/3.17b12bed6b853e365236.js","'use strict';\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n(function () {\n  \"use strict\";\n\n  if (!Array.from) {\n    Array.from = function (object) {\n      return [].slice.call(object);\n    };\n  }\n\n  function buildDraggable(Sortable) {\n    function removeNode(node) {\n      node.parentElement.removeChild(node);\n    }\n\n    function insertNodeAt(fatherNode, node, position) {\n      var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;\n      fatherNode.insertBefore(node, refNode);\n    }\n\n    function computeVmIndex(vnodes, element) {\n      return vnodes.map(function (elt) {\n        return elt.elm;\n      }).indexOf(element);\n    }\n\n    function _computeIndexes(slots, children, isTransition) {\n      if (!slots) {\n        return [];\n      }\n\n      var elmFromNodes = slots.map(function (elt) {\n        return elt.elm;\n      });\n      var rawIndexes = [].concat(_toConsumableArray(children)).map(function (elt) {\n        return elmFromNodes.indexOf(elt);\n      });\n      return isTransition ? rawIndexes.filter(function (ind) {\n        return ind !== -1;\n      }) : rawIndexes;\n    }\n\n    function emit(evtName, evtData) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        return _this.$emit(evtName.toLowerCase(), evtData);\n      });\n    }\n\n    function delegateAndEmit(evtName) {\n      var _this2 = this;\n\n      return function (evtData) {\n        if (_this2.realList !== null) {\n          _this2['onDrag' + evtName](evtData);\n        }\n        emit.call(_this2, evtName, evtData);\n      };\n    }\n\n    var eventsListened = ['Start', 'Add', 'Remove', 'Update', 'End'];\n    var eventsToEmit = ['Choose', 'Sort', 'Filter', 'Clone'];\n    var readonlyProperties = ['Move'].concat(eventsListened, eventsToEmit).map(function (evt) {\n      return 'on' + evt;\n    });\n    var draggingElement = null;\n\n    var props = {\n      options: Object,\n      list: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      value: {\n        type: Array,\n        required: false,\n        default: null\n      },\n      noTransitionOnDrag: {\n        type: Boolean,\n        default: false\n      },\n      clone: {\n        type: Function,\n        default: function _default(original) {\n          return original;\n        }\n      },\n      element: {\n        type: String,\n        default: 'div'\n      },\n      move: {\n        type: Function,\n        default: null\n      }\n    };\n\n    var draggableComponent = {\n      name: 'draggable',\n\n      props: props,\n\n      data: function data() {\n        return {\n          transitionMode: false,\n          componentMode: false\n        };\n      },\n      render: function render(h) {\n        var slots = this.$slots.default;\n        if (slots && slots.length === 1) {\n          var child = slots[0];\n          if (child.componentOptions && child.componentOptions.tag === \"transition-group\") {\n            this.transitionMode = true;\n          }\n        }\n        var children = slots;\n        var footer = this.$slots.footer;\n\n        if (footer) {\n          children = slots ? [].concat(_toConsumableArray(slots), _toConsumableArray(footer)) : [].concat(_toConsumableArray(footer));\n        }\n        return h(this.element, null, children);\n      },\n      mounted: function mounted() {\n        var _this3 = this;\n\n        this.componentMode = this.element.toLowerCase() !== this.$el.nodeName.toLowerCase();\n        if (this.componentMode && this.transitionMode) {\n          throw new Error('Transition-group inside component is not supported. Please alter element value or remove transition-group. Current element value: ' + this.element);\n        }\n        var optionsAdded = {};\n        eventsListened.forEach(function (elt) {\n          optionsAdded['on' + elt] = delegateAndEmit.call(_this3, elt);\n        });\n\n        eventsToEmit.forEach(function (elt) {\n          optionsAdded['on' + elt] = emit.bind(_this3, elt);\n        });\n\n        var options = _extends({}, this.options, optionsAdded, { onMove: function onMove(evt, originalEvent) {\n            return _this3.onDragMove(evt, originalEvent);\n          } });\n        !('draggable' in options) && (options.draggable = '>*');\n        this._sortable = new Sortable(this.rootContainer, options);\n        this.computeIndexes();\n      },\n      beforeDestroy: function beforeDestroy() {\n        this._sortable.destroy();\n      },\n\n\n      computed: {\n        rootContainer: function rootContainer() {\n          return this.transitionMode ? this.$el.children[0] : this.$el;\n        },\n        isCloning: function isCloning() {\n          return !!this.options && !!this.options.group && this.options.group.pull === 'clone';\n        },\n        realList: function realList() {\n          return !!this.list ? this.list : this.value;\n        }\n      },\n\n      watch: {\n        options: {\n          handler: function handler(newOptionValue) {\n            for (var property in newOptionValue) {\n              if (readonlyProperties.indexOf(property) == -1) {\n                this._sortable.option(property, newOptionValue[property]);\n              }\n            }\n          },\n\n          deep: true\n        },\n\n        realList: function realList() {\n          this.computeIndexes();\n        }\n      },\n\n      methods: {\n        getChildrenNodes: function getChildrenNodes() {\n          if (this.componentMode) {\n            return this.$children[0].$slots.default;\n          }\n          var rawNodes = this.$slots.default;\n          return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;\n        },\n        computeIndexes: function computeIndexes() {\n          var _this4 = this;\n\n          this.$nextTick(function () {\n            _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children, _this4.transitionMode);\n          });\n        },\n        getUnderlyingVm: function getUnderlyingVm(htmlElt) {\n          var index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);\n          if (index === -1) {\n            //Edge case during move callback: related element might be\n            //an element different from collection\n            return null;\n          }\n          var element = this.realList[index];\n          return { index: index, element: element };\n        },\n        getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref) {\n          var __vue__ = _ref.__vue__;\n\n          if (!__vue__ || !__vue__.$options || __vue__.$options._componentTag !== \"transition-group\") {\n            return __vue__;\n          }\n          return __vue__.$parent;\n        },\n        emitChanges: function emitChanges(evt) {\n          var _this5 = this;\n\n          this.$nextTick(function () {\n            _this5.$emit('change', evt);\n          });\n        },\n        alterList: function alterList(onList) {\n          if (!!this.list) {\n            onList(this.list);\n          } else {\n            var newList = [].concat(_toConsumableArray(this.value));\n            onList(newList);\n            this.$emit('input', newList);\n          }\n        },\n        spliceList: function spliceList() {\n          var _arguments = arguments;\n\n          var spliceList = function spliceList(list) {\n            return list.splice.apply(list, _arguments);\n          };\n          this.alterList(spliceList);\n        },\n        updatePosition: function updatePosition(oldIndex, newIndex) {\n          var updatePosition = function updatePosition(list) {\n            return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\n          };\n          this.alterList(updatePosition);\n        },\n        getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref2) {\n          var to = _ref2.to,\n              related = _ref2.related;\n\n          var component = this.getUnderlyingPotencialDraggableComponent(to);\n          if (!component) {\n            return { component: component };\n          }\n          var list = component.realList;\n          var context = { list: list, component: component };\n          if (to !== related && list && component.getUnderlyingVm) {\n            var destination = component.getUnderlyingVm(related);\n            if (destination) {\n              return _extends(destination, context);\n            }\n          }\n\n          return context;\n        },\n        getVmIndex: function getVmIndex(domIndex) {\n          var indexes = this.visibleIndexes;\n          var numberIndexes = indexes.length;\n          return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];\n        },\n        getComponent: function getComponent() {\n          return this.$slots.default[0].componentInstance;\n        },\n        resetTransitionData: function resetTransitionData(index) {\n          if (!this.noTransitionOnDrag || !this.transitionMode) {\n            return;\n          }\n          var nodes = this.getChildrenNodes();\n          nodes[index].data = null;\n          var transitionContainer = this.getComponent();\n          transitionContainer.children = [];\n          transitionContainer.kept = undefined;\n        },\n        onDragStart: function onDragStart(evt) {\n          this.context = this.getUnderlyingVm(evt.item);\n          evt.item._underlying_vm_ = this.clone(this.context.element);\n          draggingElement = evt.item;\n        },\n        onDragAdd: function onDragAdd(evt) {\n          var element = evt.item._underlying_vm_;\n          if (element === undefined) {\n            return;\n          }\n          removeNode(evt.item);\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.spliceList(newIndex, 0, element);\n          this.computeIndexes();\n          var added = { element: element, newIndex: newIndex };\n          this.emitChanges({ added: added });\n        },\n        onDragRemove: function onDragRemove(evt) {\n          insertNodeAt(this.rootContainer, evt.item, evt.oldIndex);\n          if (this.isCloning) {\n            removeNode(evt.clone);\n            return;\n          }\n          var oldIndex = this.context.index;\n          this.spliceList(oldIndex, 1);\n          var removed = { element: this.context.element, oldIndex: oldIndex };\n          this.resetTransitionData(oldIndex);\n          this.emitChanges({ removed: removed });\n        },\n        onDragUpdate: function onDragUpdate(evt) {\n          removeNode(evt.item);\n          insertNodeAt(evt.from, evt.item, evt.oldIndex);\n          var oldIndex = this.context.index;\n          var newIndex = this.getVmIndex(evt.newIndex);\n          this.updatePosition(oldIndex, newIndex);\n          var moved = { element: this.context.element, oldIndex: oldIndex, newIndex: newIndex };\n          this.emitChanges({ moved: moved });\n        },\n        computeFutureIndex: function computeFutureIndex(relatedContext, evt) {\n          if (!relatedContext.element) {\n            return 0;\n          }\n          var domChildren = [].concat(_toConsumableArray(evt.to.children)).filter(function (el) {\n            return el.style['display'] !== 'none';\n          });\n          var currentDOMIndex = domChildren.indexOf(evt.related);\n          var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);\n          var draggedInList = domChildren.indexOf(draggingElement) != -1;\n          return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;\n        },\n        onDragMove: function onDragMove(evt, originalEvent) {\n          var onMove = this.move;\n          if (!onMove || !this.realList) {\n            return true;\n          }\n\n          var relatedContext = this.getRelatedContextFromMoveEvent(evt);\n          var draggedContext = this.context;\n          var futureIndex = this.computeFutureIndex(relatedContext, evt);\n          _extends(draggedContext, { futureIndex: futureIndex });\n          _extends(evt, { relatedContext: relatedContext, draggedContext: draggedContext });\n          return onMove(evt, originalEvent);\n        },\n        onDragEnd: function onDragEnd(evt) {\n          this.computeIndexes();\n          draggingElement = null;\n        }\n      }\n    };\n    return draggableComponent;\n  }\n\n  if (typeof exports == \"object\") {\n    var Sortable = require(\"sortablejs\");\n    module.exports = buildDraggable(Sortable);\n  } else if (typeof define == \"function\" && define.amd) {\n    define(['sortablejs'], function (Sortable) {\n      return buildDraggable(Sortable);\n    });\n  } else if (window && window.Vue && window.Sortable) {\n    var draggable = buildDraggable(window.Sortable);\n    Vue.component('draggable', draggable);\n  }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vuedraggable/dist/vuedraggable.js\n// module id = DAYN\n// module chunks = 3","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./secondPage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-62b9ec2a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./secondPage.vue\"\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/secondPage/secondPage.vue\n// module id = DxDx\n// module chunks = 3","/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @license MIT\n */\n\n(function sortableModule(factory) {\n\t\"use strict\";\n\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(factory);\n\t}\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n\t\tmodule.exports = factory();\n\t}\n\telse {\n\t\t/* jshint sub:true */\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function sortableFactory() {\n\t\"use strict\";\n\n\tif (typeof window == \"undefined\" || !window.document) {\n\t\treturn function sortableError() {\n\t\t\tthrow new Error(\"Sortable.js requires a window with a document\");\n\t\t};\n\t}\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\tlastEl,\n\t\tlastCSS,\n\t\tlastParentCSS,\n\n\t\toldIndex,\n\t\tnewIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScroll = {},\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\t\tR_FLOAT = /left|right|inline/,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\n\t\t$ = win.jQuery || win.Zepto,\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = false,\n\n\t\tsupportDraggable = !!('draggable' in document.createElement('div')),\n\t\tsupportCssPointerEvents = (function (el) {\n\t\t\t// false when IE11\n\t\t\tif (!!navigator.userAgent.match(/Trident.*rv[ :]?11\\./)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tel = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\n\t\tsavedInputChecked = [],\n\t\ttouchDragOverListeners = [],\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (rootEl && options.scroll) {\n\t\t\t\tvar _this = rootEl[expando],\n\t\t\t\t\tel,\n\t\t\t\t\trect,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinWidth = window.innerWidth,\n\t\t\t\t\twinHeight = window.innerHeight,\n\n\t\t\t\t\tvx,\n\t\t\t\t\tvy,\n\n\t\t\t\t\tscrollOffsetX,\n\t\t\t\t\tscrollOffsetY\n\t\t\t\t;\n\n\t\t\t\t// Delect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollParentEl = rootEl;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = rootEl;\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif ((scrollEl.offsetWidth < scrollEl.scrollWidth) ||\n\t\t\t\t\t\t\t\t(scrollEl.offsetHeight < scrollEl.scrollHeight)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\t\t} while (scrollEl = scrollEl.parentNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (scrollEl) {\n\t\t\t\t\tel = scrollEl;\n\t\t\t\t\trect = scrollEl.getBoundingClientRect();\n\t\t\t\t\tvx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);\n\t\t\t\t\tvy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);\n\t\t\t\t}\n\n\n\t\t\t\tif (!(vx || vy)) {\n\t\t\t\t\tvx = (winWidth - x <= sens) - (x <= sens);\n\t\t\t\t\tvy = (winHeight - y <= sens) - (y <= sens);\n\n\t\t\t\t\t/* jshint expr:true */\n\t\t\t\t\t(vx || vy) && (el = win);\n\t\t\t\t}\n\n\n\t\t\t\tif (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {\n\t\t\t\t\tautoScroll.el = el;\n\t\t\t\t\tautoScroll.vx = vx;\n\t\t\t\t\tautoScroll.vy = vy;\n\n\t\t\t\t\tclearInterval(autoScroll.pid);\n\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tautoScroll.pid = setInterval(function () {\n\t\t\t\t\t\t\tscrollOffsetY = vy ? vy * speed : 0;\n\t\t\t\t\t\t\tscrollOffsetX = vx ? vx * speed : 0;\n\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\treturn scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (el === win) {\n\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tel.scrollTop += scrollOffsetY;\n\t\t\t\t\t\t\t\tel.scrollLeft += scrollOffsetX;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 24);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 30),\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\tif (value === void 0 || value === true) {\n\t\t\t\t\tvalue = group.name;\n\t\t\t\t}\n\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn function (to, from) {\n\t\t\t\t\t\tvar fromGroup = from.options.group.name;\n\n\t\t\t\t\t\treturn pull\n\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t: value && (value.join\n\t\t\t\t\t\t\t\t? value.indexOf(fromGroup) > -1\n\t\t\t\t\t\t\t\t: (fromGroup == value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t}\n\t;\n\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: Math.random(),\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0}\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t// Bind events\n\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t_on(el, 'touchstart', this._onTapStart);\n\t\t_on(el, 'pointerdown', this._onTapStart);\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\ttouchDragOverListeners.push(this._onDragOver);\n\n\t\t// Restore sorting\n\t\toptions.store && this.sort(options.store.get(this));\n\t}\n\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && (evt.path && evt.path[0]) || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button or enabled\n\t\t\t}\n\n\n\t\t\ttarget = _closest(target, options.draggable, el);\n\n\t\t\tif (!target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, startIndex);\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, startIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\ttapEvt = evt;\n\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'transform';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDrag();\n\n\t\t\t\t\t// Make the element draggable\n\t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, oldIndex);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'pointercancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'selectstart', _this);\n\n\t\t\t\tif (options.delay) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'pointermove', _this._disableDelayedDrag);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchmove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'pointermove', this._disableDelayedDrag);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n\t\t\tif (touch) {\n\t\t\t\t// Touch device support\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\tclientY: touch.clientY\n\t\t\t\t};\n\n\t\t\t\tthis._onDragStart(tapEvt, 'touch');\n\t\t\t}\n\t\t\telse if (!this.nativeDraggable) {\n\t\t\t\tthis._onDragStart(tapEvt, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function () {\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t_toggleClass(dragEl, options.dragClass, false);\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, oldIndex);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function () {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t\t}\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),\n\t\t\t\t\tparent = target,\n\t\t\t\t\ti = touchDragOverListeners.length;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\ttouchDragOverListeners[i]({\n\t\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tdx = (touch.clientX - tapEvt.clientX) + fallbackOffset.x,\n\t\t\t\t\tdy = (touch.clientY - tapEvt.clientY) + fallbackOffset.y,\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._dragStarted();\n\t\t\t\t}\n\n\t\t\t\t// as well as creating the ghost element on the document body\n\t\t\t\tthis._appendGhost();\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar rect = dragEl.getBoundingClientRect(),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options,\n\t\t\t\t\tghostRect;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\n\t\t\t\t_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\n\n\t\t\t\t// Fixing dimensions.\n\t\t\t\tghostRect = ghostEl.getBoundingClientRect();\n\t\t\t\t_css(ghostEl, 'width', rect.width * 2 - ghostRect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height * 2 - ghostRect.height);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/useFallback) {\n\t\t\tvar dataTransfer = evt.dataTransfer,\n\t\t\t\toptions = this.options;\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (activeGroup.checkPull(this, this, dragEl, evt)) {\n\t\t\t\tcloneEl = _clone(dragEl);\n\n\t\t\t\tcloneEl.draggable = false;\n\t\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\t_toggleClass(cloneEl, this.options.chosenClass, false);\n\n\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t_dispatchEvent(this, rootEl, 'clone', dragEl);\n\t\t\t}\n\n\t\t\t_toggleClass(dragEl, options.dragClass, true);\n\n\t\t\tif (useFallback) {\n\t\t\t\tif (useFallback === 'touch') {\n\t\t\t\t\t// Bind touch events\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'touchend', this._onDrop);\n\t\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'pointerup', this._onDrop);\n\t\t\t\t} else {\n\t\t\t\t\t// Old brwoser\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'mouseup', this._onDrop);\n\t\t\t\t}\n\n\t\t\t\tthis._loopId = setInterval(this._emulateDragOver, 50);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', this);\n\t\t\t\tsetTimeout(this._dragStarted, 0);\n\t\t\t}\n\t\t},\n\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tisMovingBetweenSortable = false,\n\t\t\t\tcanSort = options.sort;\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.preventDefault();\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation();\n\t\t\t}\n\n\t\t\tif (dragEl.animated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmoved = true;\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(activeSortable.lastPullMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) &&\n\t\t\t\t(evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback\n\t\t\t) {\n\t\t\t\t// Smart auto-scrolling\n\t\t\t\t_autoScroll(evt, options, this.el);\n\n\t\t\t\tif (_silent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttarget = _closest(evt.target, options.draggable, el);\n\t\t\t\tdragRect = dragEl.getBoundingClientRect();\n\n\t\t\t\tif (putSortable !== this) {\n\t\t\t\t\tputSortable = this;\n\t\t\t\t\tisMovingBetweenSortable = true;\n\t\t\t\t}\n\n\t\t\t\tif (revert) {\n\t\t\t\t\t_cloneHide(activeSortable, true);\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (cloneEl || nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, cloneEl || nextEl);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!canSort) {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n\t\t\t\t\t(el === evt.target) && (_ghostIsLast(el, evt))\n\t\t\t\t) {\n\t\t\t\t\t//assign target only if condition is true\n\t\t\t\t\tif (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {\n\t\t\t\t\t\ttarget = el.lastElementChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tif (target.animated) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\t\t\t\t\t}\n\n\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt) !== false) {\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && !target.animated && target !== dragEl && (target.parentNode[expando] !== void 0)) {\n\t\t\t\t\tif (lastEl !== target) {\n\t\t\t\t\t\tlastEl = target;\n\t\t\t\t\t\tlastCSS = _css(target);\n\t\t\t\t\t\tlastParentCSS = _css(target.parentNode);\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\n\t\t\t\t\tvar width = targetRect.right - targetRect.left,\n\t\t\t\t\t\theight = targetRect.bottom - targetRect.top,\n\t\t\t\t\t\tfloating = R_FLOAT.test(lastCSS.cssFloat + lastCSS.display)\n\t\t\t\t\t\t\t|| (lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].indexOf('row') === 0),\n\t\t\t\t\t\tisWide = (target.offsetWidth > dragEl.offsetWidth),\n\t\t\t\t\t\tisLong = (target.offsetHeight > dragEl.offsetHeight),\n\t\t\t\t\t\thalfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY - targetRect.top) / height) > 0.5,\n\t\t\t\t\t\tnextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false\n\t\t\t\t\t;\n\n\t\t\t\t\tif (floating) {\n\t\t\t\t\t\tvar elTop = dragEl.offsetTop,\n\t\t\t\t\t\t\ttgTop = target.offsetTop;\n\n\t\t\t\t\t\tif (elTop === tgTop) {\n\t\t\t\t\t\t\tafter = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.previousElementSibling === dragEl || dragEl.previousElementSibling === target) {\n\t\t\t\t\t\t\tafter = (evt.clientY - targetRect.top) / height > 0.5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tafter = tgTop > elTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!isMovingBetweenSortable) {\n\t\t\t\t\t\tafter = (nextSibling !== dragEl) && !isLong || halfway && isLong;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\tthis._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = target.getBoundingClientRect();\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = prevRect.getBoundingClientRect();\n\t\t\t\t}\n\n\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t+ (prevRect.left - currentRect.left) + 'px,'\n\t\t\t\t\t+ (prevRect.top - currentRect.top) + 'px,0)'\n\t\t\t\t);\n\n\t\t\t\ttarget.offsetWidth; // repaint\n\n\t\t\t\t_css(target, 'transition', 'all ' + ms + 'ms');\n\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\n\t\t\t\tclearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointercancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\n\t\t\tclearInterval(this._loopId);\n\t\t\tclearInterval(autoScroll.pid);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || Sortable.active.lastPullMode !== 'clone') {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, rootEl, oldIndex);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\n\t\t\tlastEl =\n\t\t\tlastCSS =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragover':\n\t\t\t\tcase 'dragenter':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\ttouchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\n\n\t\t\tthis._onDrop();\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t};\n\n\n\tfunction _cloneHide(sortable, state) {\n\t\tif (sortable.lastPullMode !== 'clone') {\n\t\t\tstate = true;\n\t\t}\n\n\t\tif (cloneEl && (cloneEl.state !== state)) {\n\t\t\t_css(cloneEl, 'display', state ? 'none' : '');\n\n\t\t\tif (!state) {\n\t\t\t\tif (cloneEl.state) {\n\t\t\t\t\tif (sortable.options.group.revertClone) {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t\t\tsortable._animate(dragEl, cloneEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcloneEl.state = state;\n\t\t}\n\t}\n\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\n\t\t\tdo {\n\t\t\t\tif ((selector === '>*' && el.parentNode === ctx) || _matches(el, selector)) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\t/* jshint boss:true */\n\t\t\t} while (el = _getParentOrHost(el));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _getParentOrHost(el) {\n\t\tvar parent = el.host;\n\n\t\treturn (parent && parent.nodeType) ? parent : el.parentNode;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style)) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) {\n\t\tsortable = (sortable || rootEl[expando]);\n\n\t\tvar evt = document.createEvent('Event'),\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\n\t\tevt.initEvent(name, true, true);\n\n\t\tevt.to = rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\trootEl.dispatchEvent(evt);\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\n\t\tevt = document.createEvent('Event');\n\t\tevt.initEvent('move', true, true);\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || toEl.getBoundingClientRect();\n\t\tevt.willInsertAfter = willInsertAfter;\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\t/** @returns {HTMLElement|false} */\n\tfunction _ghostIsLast(el, evt) {\n\t\tvar lastEl = el.lastElementChild,\n\t\t\trect = lastEl.getBoundingClientRect();\n\n\t\t// 5 — min delta\n\t\t// abs — нельзя добавлять, а то глюки при наведении сверху\n\t\treturn (evt.clientY - (rect.top + rect.height) > 5) ||\n\t\t\t(evt.clientX - (rect.left + rect.width) > 5);\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && (selector === '>*' || _matches(el, selector))) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n\t\tif (el) {\n\t\t\tselector = selector.split('.');\n\n\t\t\tvar tag = selector.shift().toUpperCase(),\n\t\t\t\tre = new RegExp('\\\\s(' + selector.join('|') + ')(?=\\\\s)', 'g');\n\n\t\t\treturn (\n\t\t\t\t(tag === '' || el.nodeName.toUpperCase() == tag) &&\n\t\t\t\t(!selector.length || ((' ' + el.className + ' ').match(re) || []).length == selector.length)\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction _throttle(callback, ms) {\n\t\tvar args, _this;\n\n\t\treturn function () {\n\t\t\tif (args === void 0) {\n\t\t\t\targs = arguments;\n\t\t\t\t_this = this;\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\targs = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tfunction _clone(el) {\n\t\treturn $\n\t\t\t? $(el).clone(true)[0]\n\t\t\t: (Polymer && Polymer.dom\n\t\t\t\t? Polymer.dom(el).cloneNode(true)\n\t\t\t\t: el.cloneNode(true)\n\t\t\t);\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\t// Fixed #973: \n\t_on(document, 'touchmove', function (evt) {\n\t\tif (Sortable.active) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\ttry {\n\t\twindow.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n\t\t\tget: function () {\n\t\t\t\tcaptureMode = {\n\t\t\t\t\tcapture: false,\n\t\t\t\t\tpassive: false\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t} catch (err) {}\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tclone: _clone,\n\t\tindex: _index\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.6.1';\n\treturn Sortable;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sortablejs/Sortable.js\n// module id = Lokx\n// module chunks = 3","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--9-2!../../../node_modules/sass-loader/lib/loader.js??ref--9-3!./secondPage.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"1475f1d2\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/secondPage/secondPage.scss\n// module id = RdRw\n// module chunks = 3","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"secondPage\"\n  }, [_c('p', {\n    staticClass: \"title\",\n    on: {\n      \"click\": function($event) {\n        _vm.handlePage()\n      }\n    }\n  }, [_vm._v(\"secondPage\")]), _vm._v(\" \"), _c('p', [_vm._v(\"第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"button\",\n    on: {\n      \"click\": function($event) {\n        _vm.handleButton()\n      }\n    }\n  }, [_vm._v(\"dian\")]), _vm._v(\" \"), _c('p', [_vm._v(\"count:\" + _vm._s(_vm.count))]), _vm._v(\" \"), _c('p', [_vm._v(\"numb:\" + _vm._s(_vm.numb))]), _vm._v(\" \"), _c('div', {\n    staticClass: \"move-around\"\n  }, [_c('div', {\n    staticClass: \"title\"\n  }, [_vm._v(\"请选择\")]), _vm._v(\" \"), _c('draggable', {\n    staticClass: \"list-group\",\n    attrs: {\n      \"element\": \"ul\",\n      \"options\": _vm.dragOptions\n    },\n    model: {\n      value: (_vm.list),\n      callback: function($$v) {\n        _vm.list = $$v\n      },\n      expression: \"list\"\n    }\n  }, [_c('transition-group', {\n    attrs: {\n      \"type\": \"transition\",\n      \"name\": 'flip-list'\n    }\n  }, _vm._l((_vm.list), function(element) {\n    return _c('li', {\n      key: element.order,\n      staticClass: \"list-group-item\"\n    }, [_vm._v(\" \\n                \" + _vm._s(element.name) + \"\\n                \"), _c('span', {\n      staticClass: \"badge\"\n    }, [_vm._v(_vm._s(element.order))])])\n  }))], 1)], 1)])\n}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-62b9ec2a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/secondPage/secondPage.vue\n// module id = StRg\n// module chunks = 3","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".secondPage{background-color:green;width:10rem;height:100%;font-size:16px}[data-dpr=\\\"2\\\"] .secondPage{font-size:32px}[data-dpr=\\\"3\\\"] .secondPage{font-size:48px}.secondPage .title{background-color:red;width:10rem;height:1.33333rem}.secondPage .button{width:2.66667rem;height:1.33333rem}.secondPage .move-around{position:absolute;width:100%;left:0;bottom:0}.secondPage .move-around .list-group{width:100%;min-height:20px}.secondPage .move-around .list-group .list-group-item{position:relative;width:100%;height:50px;background-color:#fff}.secondPage .move-around .list-group .list-group-item .badge{position:absolute;right:0;top:0}\", \"\", {\"version\":3,\"sources\":[\"D:/EastWork/creditloan/src/views/secondPage/src/views/secondPage/secondPage.scss\",\"D:/EastWork/creditloan/src/views/secondPage/src/assets/css/_mixin.scss\",\"D:/EastWork/creditloan/src/views/secondPage/secondPage.scss\"],\"names\":[],\"mappings\":\"AAEA,YACC,uBAAuB,ACetB,YAAwC,ADZzC,YAAW,ACLX,cDMsB,CAqCtB,AEvCC,2BDFA,cAAyB,CACzB,ACGA,2BDDA,cAAyB,CACzB,ADLF,mBAQE,qBAAqB,ACQrB,YAAwC,AAAxC,iBAAwC,CDLxC,AAXF,oBCgBE,iBAAwC,AAAxC,iBAAwC,CDDxC,AAfF,yBAkBE,kBAAkB,AAClB,WAAW,AACX,OAAM,AACN,QAAS,CAmBT,AAxCF,qCAwBG,WAAW,AACX,eAAgB,CAchB,AAvCH,sDA4BI,kBAAkB,AAClB,WAAW,AACX,YAAY,AACZ,qBAAsB,CAOtB,AAtCJ,6DAkCK,kBAAkB,AAClB,QAAQ,AACR,KAAM,CACN\",\"file\":\"secondPage.scss\",\"sourcesContent\":[\"@import \\\"../../assets/css/_mixin.scss\\\";\\r\\n\\r\\n.secondPage{\\r\\n\\tbackground-color: green;\\r\\n\\r\\n\\t@include px2rem(width, 750px);\\r\\n\\theight:100%; \\r\\n\\t@include font-dpr(16px);\\r\\n\\r\\n\\t.title{\\r\\n\\t\\tbackground-color: red;\\r\\n\\t\\t@include px2rem(width, 750px);\\r\\n\\t\\t@include px2rem(height, 100px);\\r\\n\\t}\\r\\n\\t.button{ \\r\\n\\t\\t@include px2rem(width, 200px);\\r\\n\\t\\t@include px2rem(height, 100px);\\r\\n\\t}\\r\\n\\r\\n\\t.move-around{\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\tleft:0;\\r\\n\\t\\tbottom: 0;\\r\\n\\r\\n\\t\\t.list-group {\\r\\n\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\tmin-height: 20px;\\r\\n\\t\\t\\t.list-group-item {\\r\\n\\r\\n\\t\\t\\t\\tposition: relative;\\r\\n\\t\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\t\\theight: 50px;\\r\\n\\t\\t\\t\\tbackground-color: #fff;\\r\\n\\r\\n\\t\\t\\t\\t.badge{\\r\\n\\t\\t\\t\\t\\tposition: absolute;\\r\\n\\t\\t\\t\\t\\tright: 0;\\r\\n\\t\\t\\t\\t\\ttop: 0; \\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n \\r\\n}\",\"@mixin font-dpr($font-size){ \\n\\tfont-size: $font-size; \\n\\t[data-dpr=\\\"2\\\"] & { \\n\\t\\tfont-size: $font-size * 2; \\n\\t}\\n\\t[data-dpr=\\\"3\\\"] & {\\n\\t\\tfont-size: $font-size * 3; \\n\\t} \\n}\\n@mixin px2rem($property,$px-values,$baseline-px:75px,$support-for-ie:false){ \\n\\t//Conver the baseline into rems \\n\\t$baseline-rem: $baseline-px / 1rem * 1; \\n\\t//Print the first line in pixel values \\n\\t@if $support-for-ie { \\n\\t\\t#{$property}: $px-values; \\n\\t} \\n\\t//if there is only one (numeric) value, return the property/value line for it. \\n\\t@if type-of($px-values) == \\\"number\\\"{ \\n\\t\\t#{$property}: $px-values / $baseline-rem; \\n\\t} @else {\\n\\t\\t//Create an empty list that we can dump values into \\n\\t\\t$rem-values:(); \\n\\t\\t@each $value in $px-values{ \\n\\t\\t// If the value is zero or not a number, return it \\n\\t\\t\\t@if $value == 0 or type-of($value) == \\\"number\\\"{ \\n\\t\\t\\t\\t$rem-values: append($rem-values, $value / $baseline-rem); \\n\\t\\t\\t} \\n\\t\\t} \\n\\t\\t// Return the property and its list of converted values \\n\\t\\t#{$property}: $rem-values; \\n\\t} \\n}\\n\\n$component-pic-url:\\\"../../assets/images/\\\";\\n$view-pic-url:\\\"../../assets/images/\\\";\\n\",\".secondPage {\\n  background-color: green;\\n  width: 10rem;\\n  height: 100%;\\n  font-size: 16px; }\\n  [data-dpr=\\\"2\\\"] .secondPage {\\n    font-size: 32px; }\\n  [data-dpr=\\\"3\\\"] .secondPage {\\n    font-size: 48px; }\\n  .secondPage .title {\\n    background-color: red;\\n    width: 10rem;\\n    height: 1.33333rem; }\\n  .secondPage .button {\\n    width: 2.66667rem;\\n    height: 1.33333rem; }\\n  .secondPage .move-around {\\n    position: absolute;\\n    width: 100%;\\n    left: 0;\\n    bottom: 0; }\\n    .secondPage .move-around .list-group {\\n      width: 100%;\\n      min-height: 20px; }\\n      .secondPage .move-around .list-group .list-group-item {\\n        position: relative;\\n        width: 100%;\\n        height: 50px;\\n        background-color: #fff; }\\n        .secondPage .move-around .list-group .list-group-item .badge {\\n          position: absolute;\\n          right: 0;\\n          top: 0; }\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./src/views/secondPage/secondPage.scss\n// module id = YJ15\n// module chunks = 3","<template>\r\n\r\n  <div class=\"secondPage\">\r\n\r\n    <p class=\"title\" v-on:click=\"handlePage()\">secondPage</p>\r\n    <p>第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页第二页</p>\r\n  \r\n    <button class=\"button\" v-on:click=\"handleButton()\">dian</button>  \r\n    <p>count:{{count}}</p>\r\n    <p>numb:{{numb}}</p>\r\n\r\n\r\n    <div class=\"move-around\">\r\n        <div class=\"title\">请选择</div>\r\n        <draggable class=\"list-group\" element=\"ul\" v-model=\"list\" :options=\"dragOptions\"> \r\n            <transition-group type=\"transition\" :name=\"'flip-list'\">\r\n                <li class=\"list-group-item\" v-for=\"element in list\" :key=\"element.order\"> \r\n                  {{element.name}}\r\n                  <span class=\"badge\">{{element.order}}</span>\r\n                </li>\r\n            </transition-group>\r\n        </draggable>\r\n    </div>\r\n\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script> \r\n\r\nimport \"./secondPage.scss\"; \r\nimport {mapState,mapGetters} from 'vuex'  \r\n\r\nimport draggable from 'vuedraggable'\r\nconst message = [ 'vue.draggable', 'draggable', 'component', 'for', 'vue.js 2.0', 'based' , 'on', 'Sortablejs' ]\r\n\r\nexport default {\r\n    data() {\r\n        // console.log(\"---------- data -----------\");\r\n        let self = this; \r\n\r\n        return { \r\n            list: message.map( (name,index) => {return {name, order: index+1}; }), \r\n        }\r\n    },\r\n    props: {\r\n    },\r\n    created() {\r\n        // console.log(\"---------- created -----------\");\r\n    },\r\n    updated() {\r\n        // console.log(\"---------- updated -----------\");\r\n    },\r\n    components: {\r\n        // console.log(\"---------- components -----------\");\r\n        draggable,\r\n    },\r\n\r\n    mounted() {\r\n        // console.log(\"---------- mounted -----------\");\r\n        let self = this;\r\n\r\n    },\r\n\r\n    computed:{\r\n        ...mapGetters({\r\n            numb: \"Gnumb\"\r\n        }),\r\n         ...mapState({\r\n            count: state => state.secondPage.count\r\n        }),\r\n\r\n        dragOptions () {\r\n          return  {\r\n            animation: 0,\r\n            group: 'description',\r\n            disabled: false,\r\n            ghostClass: 'ghost'\r\n          };\r\n        },\r\n    },\r\n\r\n    watch: {},\r\n    methods: {\r\n \r\n        handlePage() {\r\n             this.$router.push('/thirdPage');\r\n        },\r\n        handleButton(){ \r\n            this.$store.dispatch('secondPage/actionA');\r\n        },\r\n        handleNoop() {\r\n            //noop\r\n        },\r\n    },\r\n\r\n}\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/views/secondPage/secondPage.vue?5c10c55c"],"sourceRoot":""}